package HelperClasses;
/**
 * 
 * This code is used for the 3rd submission of the journal to get the bw and backup VMs for the common requests 
 * Results for the PPDR, SVMP-BG and WCS are got from C:\Users\umroot\Google Drive\Concordia\PHD Research Documents\Work\3_ProtectionPlanDesignWithBandwidthSharing_journal\TestResultsUsedForSubmit2RuncodeImp5
 * Results for NL are got from C:\Users\umroot\Google Drive\Concordia\PHD Research Documents\Work\3_ProtectionPlanDesignWithBandwidthSharing_journal\TestResultsUsedForSubmit3RuncodeImp6
 */
import java.io.IOException;
import java.util.ArrayList;

public class HelpBackupVMBw {

	//SET 1
	/*public ArrayList<int[]> getAdmittedReqAllButNaive()
	{
		ArrayList<int[]> admittedReqAllbutNaive = new ArrayList<int[]>();
		
		int [] load2_0 ={0,1,2,3,4,5,7,8,9,10,11,14,16,18,19,20,22,24,25,27,28,29,30,31,32,35,36,37,39,40,42,47,52,53,55,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99};
		int [] load2_1 ={0,1,2,4,5,6,7,8,9,11,13,14,15,16,17,20,21,22,23,24,25,29,30,31,34,35,36,37,38,39,40,41,42,44,46,47,48,49,50,52,54,55,56,59,60,61,62,63,66,67,74,75,76,77,78,80,81,82,83,84,85,86,87,88,90,91,92,94,96,97,98};
		int [] load2_2 ={0,1,2,3,5,7,8,9,10,11,12,13,17,20,21,23,25,26,27,28,29,30,31,32,38,39,40,42,43,44,45,48,49,53,54,55,58,59,60,62,65,67,68,69,70,71,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99};
		int [] load2_3 ={0,1,6,7,9,11,12,13,14,15,17,18,19,21,22,26,28,29,32,33,37,39,41,42,43,44,45,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,64,67,70,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,95,97,98,99,};
		int [] load2_4 ={0,1,2,3,4,6,7,8,9,10,13,14,19,20,21,22,24,25,26,28,30,33,34,35,36,37,38,39,40,42,46,47,48,49,50,51,54,55,56,58,60,62,64,65,66,67,68,69,70,71,72,73,74,79,80,81,86,87,88,89,90,91,92,93,94,96,97,98,99};
		
		int [] load4_0 ={0,1,2,3,4,5,9,10,11,12,19,22,24,25,26,28,29,30,31,32,33,35,36,37,39,40,41,43,47,49,50,51,52,53,57,59,60,61,62,63,64,66,69,82,86,93,97};
		int [] load4_1 ={0,1,6,7,9,10,11,12,13,14,17,18,20,21,22,25,26,28,33,34,35,40,42,44,47,51,53,56,57,58,59,61,64,65,67,68,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,94,95,96,97,98,99};
		int [] load4_2 ={0,1,3,4,8,9,13,14,22,26,27,28,29,30,31,32,33,34,35,39,40,49,50,52,53,59,60,61,62,63,64,65,72,76,77,78,79,80,81,82,83,84,85,86,98,99};
		int [] load4_3 ={0,1,2,5,6,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,32,38,40,41,42,44,47,48,49,50,51,54,55,63,69,75,78,82,83,84,85,86,87,88,90,92,93,94,98,99};
		int [] load4_4 ={0,1,3,10,15,16,17,18,19,21,22,29,32,33,36,37,41,43,48,49,51,52,53,58,60,61,65,66,68,70,75,79,80,81,84,92,93,94,95,96};
		
		int [] load6_0 ={0,1,2,5,6,7,12,14,16,18,21,22,23,24,25,26,27,31,39,41,42,44,46,60,61,62,63,79,81,86,97};
		int [] load6_1 ={0,1,2,9,16,17,21,25,26,28,34,35,36,41,43,44,46,47,49,54,68,72,73,74,75,76,77,80,81,82,86,87};
		int [] load6_2 ={0,1,2,5,6,7,21,24,28,57,60,61,62,64,65,67,95,96,97,98};
		int [] load6_3 ={0,1,4,9,13,14,15,22,25,28,31,33,34,46,48,49,50,52,56,57,60,61,62,63,67,75,76,77,79,80,83,84,86,94,98,99};
		int [] load6_4 ={0,1,2,4,6,7,8,10,17,18,19,20,22,24,25,26,29,31,35,38,40,42,43,44,45,46,48,49,50,51,60,65,67,69,72,75,76,81,87,91,92,93,96};
		
		int [] load8_0 ={0,1,8,9,10,22,23,26,31,33,37,41,47,48,54,65,73,84,85,98};
		int [] load8_1 ={0,1,2,22,28,33,36,37,41,47,48,50,54,55,59,60,65,67,75,76,77,88,89,90,91,92,93,98};
		int [] load8_2 ={0,1,4,5,6,7,8,9,17,18,19,20,21,22,23,24,30,32,34,35,38,41,42,49,50,51,56,57,58,59,60,72,74,82,84,88,89,92,95,96,97};
		int [] load8_3 ={0,1,2,3,9,10,11,14,15,16,21,23,26,27,29,30,33,34,36,37,38,40,43,46,49,50,57,63,64,69,76,84,87,89,90,96};
		int [] load8_4 ={0,1,2,3,5,6,7,8,11,13,14,15,18,25,30,33,34,35,42,43,45,46,62,63,68,79,80,81,82,83,84,85,87,92,97};
		
		int [] load10_0 ={0,1,2,4,6,7,8,9,11,17,23,32,70,71,72,82,95,97,98,99};
		int [] load10_1 ={0,1,2,3,4,7,12,23,50,58,59,61,68,72,74,75,80,89,93};
		int [] load10_2 ={0,1,8,15,24,30,32,33,41,43,47,56,63,64,65,71,79,85,93,98};
		int [] load10_3 ={0,1,6,8,9,50,55,59,64,68,82,83,84,88,89,90,91,92,93};
		int [] load10_4 ={0,1,2,6,7,8,10,11,16,23,57,79,81,86,90,91,93,95,99};
		
		admittedReqAllbutNaive.add(load2_0);
		admittedReqAllbutNaive.add(load2_1);
		admittedReqAllbutNaive.add(load2_2);
		admittedReqAllbutNaive.add(load2_3);
		admittedReqAllbutNaive.add(load2_4);
		
		admittedReqAllbutNaive.add(load4_0);
		admittedReqAllbutNaive.add(load4_1);
		admittedReqAllbutNaive.add(load4_2);
		admittedReqAllbutNaive.add(load4_3);
		admittedReqAllbutNaive.add(load4_4);
		
		admittedReqAllbutNaive.add(load6_0);
		admittedReqAllbutNaive.add(load6_1);
		admittedReqAllbutNaive.add(load6_2);
		admittedReqAllbutNaive.add(load6_3);
		admittedReqAllbutNaive.add(load6_4);
		
		admittedReqAllbutNaive.add(load8_0);
		admittedReqAllbutNaive.add(load8_1);
		admittedReqAllbutNaive.add(load8_2);
		admittedReqAllbutNaive.add(load8_3);
		admittedReqAllbutNaive.add(load8_4);
		
		admittedReqAllbutNaive.add(load10_0);
		admittedReqAllbutNaive.add(load10_1);
		admittedReqAllbutNaive.add(load10_2);
		admittedReqAllbutNaive.add(load10_3);
		admittedReqAllbutNaive.add(load10_4);
		
		return admittedReqAllbutNaive;
		
	}
	
	
	public ArrayList<int[]> getAdmittedReqByNaive()
	{
		ArrayList<int[]> admittedReqbyNaive = new ArrayList<int[]>();
		
		int [] load2_0 ={0,1,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,60,62,63,64,66,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,};
		int [] load2_1 ={0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,17,18,19,20,21,22,23,25,34,35,36,37,39,40,41,44,46,47,48,49,50,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99};
		int [] load2_2 ={0,1,2,3,4,5,6,7,8,10,11,13,17,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,51,52,53,54,59,60,61,62,65,66,67,68,69,70,71,72,78,79,80,81,82,83,84,86,87,88,90,91,92,93,94,95,96,97,};
		int [] load2_3 ={0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,34,35,37,38,39,40,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,64,70,71,72,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99};
		int [] load2_4 ={0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,27,28,29,30,33,34,35,36,37,38,39,41,42,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,72,73,74,75,76,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,98,99};
		
		int [] load4_0 ={0,1,2,3,4,9,10,11,12,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,69,70,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,};
		int [] load4_1 ={0,1,2,3,4,5,6,7,8,9,10,12,13,17,18,19,22,25,26,29,33,34,35,36,37,38,39,40,42,46,47,48,49,50,51,52,53,54,57,58,59,60,65,73,74,75,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,};
		int [] load4_2 ={0,1,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,59,60,61,62,63,64,65,66,67,68,69,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92};
		int [] load4_3 ={0,1,2,3,4,5,6,8,11,12,13,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,38,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,82,83,84,85,86,87,88,89,90,92,94,98,99};
		int [] load4_4 ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,48,49,50,51,58,60,65,70,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,};
		
		int [] load6_0 ={0,1,2,4,5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,34,35,36,37,38,42,43,44,45,60,61,62,63,66,67,68,69,70,71,72,73,74,79,81,87,88,89,90,91,92,93,95,96,97,98,99,};
		int [] load6_1 ={0,1,16,17,18,19,20,21,25,26,27,28,31,35,36,37,38,39,40,41,42,43,44,46,47,48,52,53,54,55,56,66,68,69,70,71,72,73,75,76,78,81,82,86,87,89,90,91,92,93,94,95,96,97,98,99,};
		int [] load6_2 ={0,1,6,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,56,57,58,59,60,61,62,66,94,95,96,97,98,};
		int [] load6_3 ={0,1,2,3,4,5,6,7,9,10,14,15,22,23,27,29,31,33,34,35,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,67,68,69,70,71,72,73,74,75,76,79,80,81,83,84,85,86,87,88,89,92,93,95,96,97,98,99,};
		int [] load6_4 ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,59,60,61,65,66,67,68,70,72,75,76,77,81,82,85,87,89,91,96,97,99};
		
		int [] load8_0 ={0,1,2,3,4,5,6,7,8,9,10,17,22,23,24,25,27,28,29,30,31,32,33,34,35,40,41,42,43,58,59,60,61,64,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,98,};
		int [] load8_1 ={0,1,2,8,16,17,18,22,28,33,34,35,36,37,38,39,40,42,43,44,45,46,48,49,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,88,89,90,93,94,95,96,97,98,99,};
		int [] load8_2 ={0,1,2,3,4,5,7,8,17,18,19,20,22,23,24,30,34,35,41,49,57,58,59,60,61,62,69,72,74,76,77,78,79,80,81,82,83,87,88,89,92,93,94,95,96,97,98,99,};
		int [] load8_3 ={0,1,2,3,6,7,8,9,15,16,17,21,22,23,24,25,26,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,49,50,51,57,61,62,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,};
		int [] load8_4 ={0,1,5,6,12,13,14,15,16,18,19,20,21,25,26,27,29,30,31,32,34,42,45,53,54,55,56,57,58,59,60,61,68,70,79,80,81,82,83,84,85,87,88,90,92,};
		
		int [] load10_0 ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,64,65,69,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,94,95,96,97,98,};
		int [] load10_1 ={0,1,2,12,23,41,42,48,53,55,56,57,58,59,60,74,75,76,77,78,81,82,85,86,87,88,99};
		int [] load10_2 ={0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,62,63,65,67,68,69,72,73,74,75,76,77,78,79,85,87,88,97,};
		int [] load10_3 ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,57,58,62,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,92,93,};
		int [] load10_4 ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,30,38,57,60,61,66,86,90,91,92,93,95,99,};
		
		admittedReqbyNaive.add(load2_0);
		admittedReqbyNaive.add(load2_1);
		admittedReqbyNaive.add(load2_2);
		admittedReqbyNaive.add(load2_3);
		admittedReqbyNaive.add(load2_4);
		
		admittedReqbyNaive.add(load4_0);
		admittedReqbyNaive.add(load4_1);
		admittedReqbyNaive.add(load4_2);
		admittedReqbyNaive.add(load4_3);
		admittedReqbyNaive.add(load4_4);
		
		admittedReqbyNaive.add(load6_0);
		admittedReqbyNaive.add(load6_1);
		admittedReqbyNaive.add(load6_2);
		admittedReqbyNaive.add(load6_3);
		admittedReqbyNaive.add(load6_4);
		
		admittedReqbyNaive.add(load8_0);
		admittedReqbyNaive.add(load8_1);
		admittedReqbyNaive.add(load8_2);
		admittedReqbyNaive.add(load8_3);
		admittedReqbyNaive.add(load8_4);
		
		admittedReqbyNaive.add(load10_0);
		admittedReqbyNaive.add(load10_1);
		admittedReqbyNaive.add(load10_2);
		admittedReqbyNaive.add(load10_3);
		admittedReqbyNaive.add(load10_4);
		
		return admittedReqbyNaive;
	}
	
	public ArrayList<int[]> getbackupVMByNaive()
	{
		ArrayList<int[]> backupVMbyNaive = new ArrayList<int[]>();
		
		int [] load2_0 ={6,2,6,3,2,4,3,6,6,5,2,2,2,5,6,6,6,6,6,4,2,6,3,3,3,2,5,4,2,6,6,2,2,6,2,6,2,3,2,4,2,2,3,3,2,6,6,6,2,6,2,4,6,6,4,3,2,4,2,3,6,6,2,6,3,3,6,6,4,2,3,4,4,4,5,6,5,6,5,2,6,2,4,6,5,6,};
		int [] load2_1 ={2,6,2,6,5,3,3,2,2,4,2,2,4,4,2,6,4,6,2,6,6,5,2,6,2,6,4,6,6,5,2,6,2,2,3,2,5,5,6,2,6,4,4,3,3,5,2,2,2,3,3,3,2,3,4,2,6,6,6,6,4,6,2,6,6,3,2,6,2,2,2,4,6,6,2,4,4,2,2,2,3,};
		int [] load2_2 ={2,3,3,5,3,5,3,6,6,6,4,2,6,2,6,3,6,6,6,2,2,6,3,4,2,6,6,3,6,2,6,2,2,6,6,2,2,6,6,5,6,2,3,2,2,2,6,6,4,3,2,2,4,4,4,6,6,2,6,6,2,4,6,2,5,6,6,5,2,};
		int [] load2_3 ={2,4,3,3,3,2,3,6,2,2,6,3,6,2,2,2,3,6,6,4,2,2,2,3,2,6,2,5,2,4,4,6,2,2,6,3,3,3,5,6,3,6,6,2,2,3,6,6,6,6,2,2,4,2,4,5,6,2,4,6,6,3,4,2,4,3,3,5,3,3,2,2,2,5,4,2,3,4,2,4,2,2,};
		int [] load2_4 ={4,6,5,2,5,2,6,6,3,2,2,6,5,6,2,6,6,6,3,3,4,6,6,5,3,3,5,6,6,2,2,5,4,2,4,6,5,6,2,3,6,6,6,6,5,4,2,5,2,5,6,6,6,4,3,2,6,4,6,6,2,5,6,2,4,6,2,5,2,5,2,6,2,6,6,5,2,6,3,3,4,3,1,};
		
		int [] load4_0 ={3,2,6,2,2,4,6,5,2,3,2,6,2,6,3,2,6,2,4,6,2,6,4,6,2,2,2,6,2,6,6,6,5,5,5,4,6,2,5,2,6,3,6,4,5,6,3,4,2,3,6,6,5,5,2,3,6,3,6,6,2,6,6,6,2,6,2,5,4,2,3,2,3,6,5,6,3,2,};
		int [] load4_1 ={2,6,2,2,4,6,6,4,2,6,3,6,6,3,6,2,6,6,2,4,3,6,2,6,2,6,5,3,6,2,6,2,6,2,6,6,6,2,6,2,3,2,3,6,3,2,6,6,4,3,2,4,6,6,2,2,4,6,6,5,3,2,6,2,3,5,};
		int [] load4_2 ={5,3,5,4,2,6,5,2,6,3,2,2,2,2,4,6,6,2,3,6,6,2,2,4,6,2,4,3,6,6,4,6,2,6,4,5,3,5,2,6,6,2,2,2,4,5,2,3,3,4,6,2,2,3,4,3,4,2,2,6,6,2,4,4,2,6,5,5,6,3,6,5,3,3,2,};
		int [] load4_3 ={6,5,3,3,2,6,2,4,2,3,5,6,6,3,4,2,2,2,2,3,5,3,3,3,2,2,2,2,2,6,2,2,6,2,2,6,6,6,4,2,2,2,3,2,6,2,2,6,2,2,3,3,2,2,2,5,6,4,2,4,6,3,2,3,3,6,6,6,3,5,3,6,2,6,2,2,5,};
		int [] load4_4 ={2,2,3,2,3,6,6,5,6,2,2,2,2,2,4,3,2,6,5,2,6,6,2,2,2,2,6,3,2,6,5,2,2,5,6,3,2,6,4,2,6,5,2,2,2,2,2,2,4,2,3,6,6,2,2,4,2,3,6,6,2,5,3,3,5,4,6,6,6,5,6,3,2,2,2,2,4,2,};
		
		int [] load6_0 ={3,4,2,2,4,2,2,3,2,2,6,6,2,4,3,2,2,6,5,2,6,3,4,2,2,6,2,4,5,2,2,2,4,3,4,6,6,6,3,2,6,4,2,2,2,2,6,3,5,3,2,6,2,2,2,6,5,2,2,6,2,2,};
		int [] load6_1 ={6,5,5,2,6,5,6,2,6,3,3,5,6,6,6,6,2,2,3,2,3,2,3,3,6,2,6,3,3,6,6,6,2,4,5,2,6,6,3,6,2,4,2,6,2,2,6,4,6,6,2,2,4,6,3,2,};
		int [] load6_2 ={6,5,5,2,6,2,2,2,6,3,2,2,6,5,2,6,2,6,3,2,2,2,2,3,5,2,5,4,2,2,2,2,2,6,6,4,5,2,6,4,6,6,2,};
		int [] load6_3 ={2,2,2,2,6,2,6,4,5,3,6,2,2,2,5,4,5,4,5,3,2,5,2,2,2,6,2,3,6,2,2,4,3,4,6,6,2,2,2,6,2,3,5,6,6,6,6,6,2,6,6,2,2,2,4,4,3,5,6,2,6,6,6,};
		int [] load6_4 ={3,2,2,3,6,5,4,6,4,2,5,3,2,2,3,2,2,6,5,2,6,2,6,3,6,2,3,6,2,5,3,3,6,2,3,6,3,5,6,2,6,3,6,2,3,2,2,6,2,6,2,6,6,2,2,3,4,2,4,6,4,6,4,5,6,5,2,5,3,6,5,6,3,4,3,5,};
		
		int [] load8_0 ={2,4,2,2,6,2,4,6,4,6,3,2,2,6,5,6,2,3,6,6,6,3,6,6,3,6,6,2,3,6,6,4,2,3,2,3,6,3,6,6,2,2,3,3,5,2,3,2,3,6,6,6,};
		int [] load8_1 ={4,2,6,6,3,2,2,2,2,3,2,2,2,5,6,5,6,5,6,6,2,2,3,2,2,6,4,2,6,2,2,2,3,6,2,2,2,6,5,6,2,5,4,5,5,2,3,2,2,4,2,2,6,2,2,4,3,};
		int [] load8_2 ={2,2,5,2,6,2,2,5,6,2,6,6,6,6,5,3,6,2,4,6,6,3,6,6,6,2,2,3,3,2,2,2,5,5,2,6,5,6,5,5,2,2,2,3,2,3,3,4,};
		int [] load8_3 ={4,4,2,4,5,2,6,6,6,6,2,2,2,6,2,3,6,6,2,5,4,3,2,5,6,4,6,5,2,6,2,3,5,4,6,2,5,2,4,6,2,6,2,2,2,6,2,3,2,2,5,1,6,1,2,2,5,2,3,3,2,2,4,2,4,3,2,4,};
		int [] load8_4 ={2,4,6,5,2,4,4,4,2,6,4,4,2,6,6,5,2,6,6,2,3,5,3,2,2,2,5,3,6,3,3,5,2,5,6,3,6,6,6,6,3,4,6,2,2,};
		
		int [] load10_0 ={3,3,5,4,6,6,2,6,5,2,2,6,5,5,6,2,6,2,2,2,5,2,2,6,2,6,6,4,2,6,2,4,5,2,6,2,2,6,4,2,2,6,4,4,6,2,6,5,6,4,4,5,5,5,3,3,2,2,6,5,5,6,4,2,5,6,6,2,6,2,3,2,5,5,6,4,6,4,6,5,6,};
		int [] load10_1 ={5,4,6,3,3,5,3,2,6,2,3,3,4,2,3,4,6,6,6,2,3,2,6,4,6,2,2,};
		int [] load10_2 ={2,6,2,2,3,2,6,2,2,2,2,3,2,6,6,2,6,2,3,4,2,2,2,6,5,3,2,5,3,6,2,2,3,5,3,6,5,2,2,6,5,1,2,6,3,2,2,6,3,2,4,5,5,6,2,6,2,5,2,6,2,5,5,5,5,2,6,};
		int [] load10_3 ={2,2,6,4,6,6,6,4,3,4,2,5,6,6,2,4,6,5,4,6,5,2,2,5,6,3,5,5,5,5,4,5,6,2,3,2,3,2,6,3,6,2,3,6,6,2,5,3,2,4,2,4,2,2,2,3,6,4,4,6,3,3,4,2,6,3,6,2,2,6,6,4,6,4,3,};
		int [] load10_4 ={3,2,2,2,3,3,2,2,4,2,2,6,5,6,2,2,6,3,4,3,5,3,6,6,4,2,2,6,2,2,2,6,3,2,4,6,3,4,};
		
		backupVMbyNaive.add(load2_0);
		backupVMbyNaive.add(load2_1);
		backupVMbyNaive.add(load2_2);
		backupVMbyNaive.add(load2_3);
		backupVMbyNaive.add(load2_4);
		
		backupVMbyNaive.add(load4_0);
		backupVMbyNaive.add(load4_1);
		backupVMbyNaive.add(load4_2);
		backupVMbyNaive.add(load4_3);
		backupVMbyNaive.add(load4_4);
		
		backupVMbyNaive.add(load6_0);
		backupVMbyNaive.add(load6_1);
		backupVMbyNaive.add(load6_2);
		backupVMbyNaive.add(load6_3);
		backupVMbyNaive.add(load6_4);
		
		backupVMbyNaive.add(load8_0);
		backupVMbyNaive.add(load8_1);
		backupVMbyNaive.add(load8_2);
		backupVMbyNaive.add(load8_3);
		backupVMbyNaive.add(load8_4);
		
		backupVMbyNaive.add(load10_0);
		backupVMbyNaive.add(load10_1);
		backupVMbyNaive.add(load10_2);
		backupVMbyNaive.add(load10_3);
		backupVMbyNaive.add(load10_4);
		
		return backupVMbyNaive;
	}
	
	
	public ArrayList<int[]> getbackupVMBySVMPBG()
	{
		ArrayList<int[]> backupVMbySVMPBG = new ArrayList<int[]>();
		
		int [] load2_0 ={6,2,4,6,3,3,2,4,3,6,6,2,5,6,6,6,4,6,3,3,3,2,5,4,2,6,6,2,2,6,6,2,6,6,2,6,2,6,2,2,4,6,2,4,2,3,2,4,2,3,6,6,6,3,6,6,4,2,3,4,4,4,5,6,5,6,5,2,6,2,4,6,6};
		int [] load2_1 ={2,6,2,6,3,3,2,2,4,2,4,4,2,6,6,2,6,5,4,5,2,6,6,6,6,2,6,4,4,6,6,5,5,2,6,2,2,3,2,6,5,6,2,5,4,4,3,3,2,2,2,6,6,6,6,6,2,6,6,3,2,6,2,2,4,6,6,4,2,2,2};
		int [] load2_2 ={2,3,3,5,5,6,6,4,6,4,6,2,6,2,3,3,6,6,3,2,2,6,3,4,2,6,2,6,3,6,5,6,6,6,6,2,3,5,6,3,2,2,5,6,4,3,5,2,4,4,4,6,6,2,6,6,6,2,6,4,6,2,5,6,6,5,2,6,4};
		int [] load2_3 ={2,4,3,6,2,6,3,6,2,2,3,6,6,2,2,5,5,2,4,4,2,3,3,4,5,6,3,6,5,2,2,3,6,6,5,2,2,4,2,6,5,6,4,4,5,4,6,2,6,3,4,2,4,3,3,5,3,3,2,2,4,4,2,2};
		int [] load2_4 ={4,6,5,2,5,6,6,3,2,2,5,6,6,3,3,4,6,5,6,3,6,6,2,2,5,4,2,4,3,5,6,2,3,6,5,6,4,2,5,2,6,6,3,2,5,4,6,6,6,6,6,2,5,4,6,2,6,6,2,6,6,5,2,6,3,4,4,3,1};
		
		int [] load4_0 ={3,2,6,2,2,3,4,6,4,2,2,6,2,6,2,6,2,6,4,4,2,2,2,6,6,6,6,5,2,2,6,3,6,4,4,3,6,6,3,6,2,4,5,6,5,2,5};
		int [] load4_1 ={2,6,6,4,6,3,4,6,6,6,3,6,5,3,6,6,2,6,3,6,2,3,5,6,6,6,6,2,5,2,3,4,3,3,5,2,6,6,4,3,6,4,3,2,4,6,2,4,4,5,5,2,6,5,2,3,5};
		int [] load4_2 ={5,3,5,4,6,5,2,2,6,2,2,4,6,2,4,3,6,6,4,6,2,2,2,4,5,3,3,4,6,2,2,3,3,2,4,4,2,6,5,5,6,3,6,5,5,6};
		int [] load4_3 ={6,5,3,6,2,2,3,5,2,6,6,6,6,3,4,2,2,2,3,5,3,3,5,2,2,6,2,6,5,6,6,6,4,2,2,2,5,3,3,3,6,6,6,3,5,3,2,6,5,2,2,5,};
		int [] load4_4 ={2,2,2,2,3,2,6,5,2,6,2,6,2,5,2,6,4,6,2,2,4,5,6,2,3,2,6,3,6,6,2,6,3,6,3,6,3,2,2,2};
		
		int [] load6_0 ={3,4,2,4,2,2,3,2,6,4,2,6,5,2,6,3,4,5,6,6,2,3,2,6,6,6,3,5,3,2,6};
		int [] load6_1 ={6,5,2,2,5,2,2,6,3,5,6,6,6,2,2,3,3,6,5,3,2,6,6,5,3,6,3,6,4,2,6,2};
		int [] load6_2 ={6,5,3,5,5,4,4,6,2,2,6,4,5,5,6,6,4,6,6,2};
		int [] load6_3 ={2,2,6,6,6,6,2,2,2,3,4,4,5,3,5,2,2,6,2,2,4,6,6,2,2,6,6,2,6,6,6,6,2,4,6,5};
		int [] load6_4 ={3,2,2,6,4,6,4,5,6,5,2,6,6,6,2,3,5,3,6,6,3,6,3,6,2,3,2,6,2,5,4,4,5,5,6,6,5,5,5,3,5,2,4};
		
		int [] load8_0 ={2,4,4,6,3,2,6,2,6,6,6,6,4,6,6,6,6,5,6,6};
		int [] load8_1 ={4,2,6,2,2,3,2,5,5,5,3,4,2,6,2,6,6,2,5,5,2,2,2,5,3,6,2,4};
		int [] load8_2 ={2,2,5,2,3,2,5,4,6,2,6,6,6,6,6,5,3,6,6,2,6,4,6,6,6,4,6,6,3,6,6,3,3,6,4,4,4,2,3,2,3};
		int [] load8_3 ={4,4,2,4,6,4,6,6,6,6,2,6,6,3,6,2,3,3,2,6,6,6,6,5,4,6,6,6,5,6,2,6,2,2,3,4};
		int [] load8_4 ={2,4,6,5,6,4,6,3,4,4,4,4,6,6,6,5,3,4,5,6,3,6,5,2,2,6,3,6,6,6,6,3,4,2,6};
		
		int [] load10_0 ={3,3,5,6,2,6,5,2,6,2,5,5,6,6,4,6,4,4,6,3};
		int [] load10_1 ={5,4,6,4,3,6,3,3,6,5,2,5,6,6,4,6,6,5,6};
		int [] load10_2 ={2,6,2,6,6,6,2,2,5,6,5,6,4,4,4,6,5,6,6,4};
		int [] load10_3 ={2,2,6,3,4,5,2,5,2,3,3,4,3,6,6,4,6,4,3};
		int [] load10_4 ={3,2,2,2,2,4,2,6,6,6,6,5,6,6,3,2,6,3,4};
		
		backupVMbySVMPBG.add(load2_0);
		backupVMbySVMPBG.add(load2_1);
		backupVMbySVMPBG.add(load2_2);
		backupVMbySVMPBG.add(load2_3);
		backupVMbySVMPBG.add(load2_4);
		
		backupVMbySVMPBG.add(load4_0);
		backupVMbySVMPBG.add(load4_1);
		backupVMbySVMPBG.add(load4_2);
		backupVMbySVMPBG.add(load4_3);
		backupVMbySVMPBG.add(load4_4);
		
		backupVMbySVMPBG.add(load6_0);
		backupVMbySVMPBG.add(load6_1);
		backupVMbySVMPBG.add(load6_2);
		backupVMbySVMPBG.add(load6_3);
		backupVMbySVMPBG.add(load6_4);
		
		backupVMbySVMPBG.add(load8_0);
		backupVMbySVMPBG.add(load8_1);
		backupVMbySVMPBG.add(load8_2);
		backupVMbySVMPBG.add(load8_3);
		backupVMbySVMPBG.add(load8_4);
		
		backupVMbySVMPBG.add(load10_0);
		backupVMbySVMPBG.add(load10_1);
		backupVMbySVMPBG.add(load10_2);
		backupVMbySVMPBG.add(load10_3);
		backupVMbySVMPBG.add(load10_4);
		
		return backupVMbySVMPBG;
	}
	
	
	public ArrayList<int[]> getbackupVMByPPDR()
	{
		ArrayList<int[]> backupVMbyPPDR = new ArrayList<int[]>();
		
		int [] load2_0 ={6,2,4,6,3,3,2,4,3,6,6,2,5,6,6,6,4,6,3,3,3,2,5,4,2,6,6,2,2,6,6,2,6,6,2,6,2,6,2,2,4,6,2,4,2,3,2,4,2,3,6,6,6,3,6,6,4,2,3,4,4,4,5,6,5,6,5,2,6,2,4,6,6};
		int [] load2_1 ={2,6,2,6,3,3,2,2,4,2,4,4,2,6,6,2,6,6,5,6,2,6,6,6,6,2,6,4,4,6,6,5,5,2,6,2,2,3,2,6,5,6,2,6,4,4,3,3,2,2,2,6,6,6,6,6,2,6,6,3,2,6,2,2,4,6,6,4,2,2,2};
		int [] load2_2 ={2,3,3,5,5,6,6,4,6,4,6,2,6,2,3,3,6,6,6,2,2,6,3,4,2,6,2,6,3,6,5,6,6,6,6,2,3,5,6,3,2,2,6,6,4,3,5,2,4,4,4,6,6,2,6,6,6,2,6,4,6,2,5,6,6,5,2,6,4};
		int [] load2_3 ={2,4,3,6,2,6,3,6,2,2,3,6,6,2,2,6,5,2,4,4,2,3,3,4,5,6,3,6,6,2,2,3,6,6,6,2,2,4,2,6,5,6,4,5,5,4,6,2,6,3,4,2,4,3,3,5,3,3,2,2,4,4,2,2};
		int [] load2_4 ={4,6,5,2,5,6,6,3,2,2,5,6,6,3,3,4,6,5,6,3,6,6,2,2,5,4,2,4,3,5,6,2,3,6,6,6,4,2,5,2,6,6,3,2,6,4,6,6,5,6,6,2,5,4,6,2,6,6,2,6,6,5,2,6,3,4,6,3,1};
		
		int [] load4_0 ={3,2,6,2,2,3,4,6,5,2,2,6,2,6,2,6,2,6,4,6,2,2,2,6,6,6,6,5,2,2,6,3,6,4,4,3,6,6,5,6,2,4,5,6,5,2,5};
		int [] load4_1 ={2,6,6,4,6,3,4,6,6,6,3,6,5,3,6,6,2,6,3,6,2,3,5,6,6,6,6,2,5,2,3,4,3,3,5,2,6,6,5,3,6,4,3,2,4,6,2,4,6,6,5,2,6,5,2,3,5};
		int [] load4_2 ={5,3,5,4,6,5,2,2,6,2,2,4,6,2,4,3,6,6,4,6,2,2,2,4,5,3,3,4,6,2,2,3,3,2,4,4,2,6,5,5,6,3,4,5,6,6};
		int [] load4_3 ={6,5,3,6,2,2,3,5,2,6,6,6,6,3,4,2,2,2,3,5,3,3,5,2,2,6,2,6,6,6,6,6,4,2,2,2,5,3,3,3,6,6,5,3,5,3,2,6,4,2,2,5};
		int [] load4_4 ={2,2,2,2,3,2,6,5,2,6,2,6,1,5,2,6,4,6,2,2,4,5,6,2,3,2,6,3,6,6,2,6,3,6,3,6,3,2,2,2};
		
		int [] load6_0 ={3,4,2,4,2,2,3,2,6,4,2,6,5,2,6,3,4,5,6,6,2,3,2,6,6,6,3,5,3,2,6};
		int [] load6_1 ={6,5,2,2,5,2,2,6,3,5,6,6,6,2,2,3,3,6,5,3,2,6,6,5,3,6,3,6,4,2,6,2};
		int [] load6_2 ={6,5,3,6,5,4,4,6,2,2,6,4,5,6,6,6,4,6,6,2};
		int [] load6_3 ={2,2,6,6,6,6,2,2,2,3,5,4,5,3,5,2,2,6,2,2,4,6,6,2,2,6,6,2,6,6,6,6,2,4,6,6};
		int [] load6_4 ={3,2,2,6,4,6,6,5,6,5,2,6,6,6,2,3,5,3,6,6,3,6,3,6,2,3,2,6,2,5,4,4,5,5,6,6,5,5,5,3,5,2,4};
		
		int [] load8_0 ={2,4,4,6,3,2,6,2,6,6,6,6,4,5,6,6,6,6,6,6};
		int [] load8_1 ={4,2,6,2,2,3,2,5,5,5,3,4,2,6,2,6,6,2,5,5,2,2,2,5,3,6,2,4};
		int [] load8_2 ={2,2,6,2,3,2,5,4,6,2,6,6,6,6,6,5,3,6,6,2,6,4,6,6,6,4,6,6,3,6,6,3,3,6,5,5,5,2,3,2,3};
		int [] load8_3 ={4,4,2,4,6,4,5,6,6,6,2,6,6,3,6,2,3,3,2,6,5,6,6,5,4,5,6,6,5,6,2,6,2,2,3,4};
		int [] load8_4 ={2,4,6,6,6,5,6,3,4,4,4,4,6,6,6,6,3,4,5,6,3,6,5,2,2,6,3,6,6,6,6,3,4,2,6};
		
		int [] load10_0 ={3,3,5,6,2,6,5,2,6,2,5,5,6,5,4,6,4,5,6,3};
		int [] load10_1 ={5,4,6,4,3,6,3,3,6,5,2,5,6,6,4,6,6,5,6};
		int [] load10_2 ={2,6,2,6,6,6,3,2,6,6,6,6,6,5,5,5,5,5,6,6,};
		int [] load10_3 ={2,2,6,3,4,5,2,5,2,3,3,4,3,6,6,4,6,4,3};
		int [] load10_4 ={3,2,2,2,2,4,2,6,6,6,6,5,6,6,3,2,6,3,4};
		
		backupVMbyPPDR.add(load2_0);
		backupVMbyPPDR.add(load2_1);
		backupVMbyPPDR.add(load2_2);
		backupVMbyPPDR.add(load2_3);
		backupVMbyPPDR.add(load2_4);
		
		backupVMbyPPDR.add(load4_0);
		backupVMbyPPDR.add(load4_1);
		backupVMbyPPDR.add(load4_2);
		backupVMbyPPDR.add(load4_3);
		backupVMbyPPDR.add(load4_4);
		
		backupVMbyPPDR.add(load6_0);
		backupVMbyPPDR.add(load6_1);
		backupVMbyPPDR.add(load6_2);
		backupVMbyPPDR.add(load6_3);
		backupVMbyPPDR.add(load6_4);
		
		backupVMbyPPDR.add(load8_0);
		backupVMbyPPDR.add(load8_1);
		backupVMbyPPDR.add(load8_2);
		backupVMbyPPDR.add(load8_3);
		backupVMbyPPDR.add(load8_4);
		
		backupVMbyPPDR.add(load10_0);
		backupVMbyPPDR.add(load10_1);
		backupVMbyPPDR.add(load10_2);
		backupVMbyPPDR.add(load10_3);
		backupVMbyPPDR.add(load10_4);
		
		return backupVMbyPPDR;
	}
	
	
	public ArrayList<int[]> getbackupBwByNaive()
	{
		ArrayList<int[]> backupVMbyNaive = new ArrayList<int[]>();
		
		int [] load2_0 ={75,33,75,70,75,68,103,7,50,58,81,111,56,67,14,35,5,84,14,81,54,50,96,75,46,48,0,109,107,14,84,61,91,21,54,46,59,36,92,36,77,68,97,111,89,44,14,75,62,20,91,78,14,104,21,110,54,36,80,101,14,42,41,14,84,71,10,0,47,67,51,79,56,64,64,10,61,58,0,111,10,111,34,28,0,7,};
		int [] load2_1 ={46,72,64,0,14,96,54,77,98,36,74,39,88,64,85,10,14,70,101,14,0,0,70,69,96,72,72,14,46,45,71,15,111,80,50,48,0,61,28,109,14,68,101,60,78,0,70,42,82,97,46,54,70,105,79,90,14,28,21,81,47,44,32,15,7,57,54,81,48,40,40,62,21,0,104,14,48,111,108,87,109,};
		int [] load2_2 ={46,36,99,76,68,0,59,15,52,0,82,111,72,95,5,58,21,72,0,54,94,54,64,47,77,0,7,36,21,95,15,88,51,10,72,32,74,49,25,28,0,37,50,46,111,84,0,10,68,114,100,77,56,115,80,81,69,66,7,49,66,84,33,46,0,10,31,0,104};
		int [] load2_3 ={42,68,66,73,87,95,114,65,78,62,75,50,78,32,66,80,73,0,46,76,94,90,111,79,74,0,45,28,95,72,47,84,41,54,46,67,72,42,0,15,62,20,7,96,50,64,14,14,28,0,56,85,72,54,64,101,7,40,72,67,15,69,94,36,64,114,107,0,36,103,57,36,90,7,53,51,84,56,93,53,32,80,};
		int [] load2_4 ={94,30,27,80,0,100,10,0,72,111,51,72,90,0,66,21,14,50,71,108,56,14,15,0,102,102,0,0,5,106,40,58,47,33,106,72,39,20,40,61,14,28,0,0,45,84,54,0,73,0,50,21,10,114,42,77,5,72,52,54,108,125,21,44,7,74,39,21,49,0,72,54,111,0,0,0,103,55,97,39,119,42,40,};
		
		int [] load4_0 ={42,80,0,111,77,53,28,0,108,72,93,69,77,5,97,105,65,64,99,75,80,50,34,5,75,101,42,14,42,75,0,44,0,46,70,82,14,85,98,32,81,111,28,115,86,21,60,47,83,103,35,20,0,0,76,105,72,78,7,42,90,75,7,7,72,0,80,39,99,68,39,50,111,7,0,7,79,70,};
		int [] load4_1 ={50,7,41,93,84,7,7,50,51,5,42,10,5,42,42,54,14,14,103,99,93,81,106,117,108,69,43,84,0,103,0,49,0,48,14,75,25,89,0,77,71,90,83,28,105,85,5,48,89,117,65,90,28,28,80,88,84,7,7,39,69,101,51,111,83,0,};
		int [] load4_2 ={29,46,0,24,111,78,0,48,10,98,98,99,111,111,99,0,48,108,66,7,14,57,48,53,81,42,70,39,14,5,74,35,66,48,68,88,48,95,90,0,28,42,83,54,7,108,36,36,39,68,25,109,32,36,36,84,88,77,68,0,10,83,56,53,48,52,0,70,52,111,0,94,77,39,80,};
		int [] load4_3 ={81,0,113,75,34,0,93,47,70,95,78,88,20,46,92,96,87,111,88,52,61,42,84,72,87,70,37,85,42,7,81,48,94,59,104,10,14,75,70,77,32,43,36,77,84,105,101,78,74,39,60,55,56,84,51,46,0,95,101,64,0,52,64,108,99,105,42,0,75,39,78,0,108,59,101,74,0,};
		int [] load4_4 ={74,101,48,97,75,14,0,104,84,83,56,85,100,53,92,73,80,72,107,80,14,7,80,44,37,77,14,82,70,44,104,45,40,41,7,64,80,5,72,105,50,45,80,87,77,88,54,77,84,66,59,69,54,66,105,77,104,62,35,54,77,45,69,50,0,50,14,75,7,41,84,39,94,36,48,56,56,101,};
		
		int [] load6_0 ={39,47,33,83,88,107,57,61,81,80,35,28,49,36,95,78,81,35,88,66,0,102,50,44,36,0,80,7,46,111,33,57,63,42,47,81,64,71,39,66,78,56,108,80,56,64,84,102,55,63,78,44,48,32,48,48,0,87,56,7,82,111,};
		int [] load6_1 ={32,0,27,48,0,44,14,72,50,78,114,0,7,42,72,0,52,72,62,89,59,51,69,39,84,97,47,69,54,21,50,7,46,115,44,36,5,7,103,47,80,72,41,42,106,32,14,50,28,42,102,45,95,14,109,81,};
		int [] load6_2 ={0,70,0,88,69,68,76,59,50,48,83,38,75,70,87,81,68,7,72,77,34,51,107,64,45,48,0,64,49,80,93,62,57,7,5,50,90,72,28,88,52,10,102,};
		int [] load6_3 ={105,40,74,108,28,59,54,99,14,84,21,70,56,66,35,69,126,50,100,97,36,67,59,105,40,46,41,63,44,42,70,36,113,88,88,15,48,104,108,28,68,50,67,0,84,75,7,75,104,14,14,87,91,77,50,90,71,0,7,56,7,34,0,};
		int [] load6_4 ={36,33,48,81,54,0,109,42,28,89,67,108,35,45,97,66,77,21,86,50,7,111,28,105,7,36,66,28,54,46,39,93,14,109,108,75,42,0,15,44,10,57,48,70,102,90,46,35,98,75,111,0,0,104,70,107,98,80,38,75,7,14,56,10,42,111,46,41,36,10,0,7,87,80,84,122,};
		
		int [] load8_0 ={36,50,49,40,14,87,7,48,68,81,60,90,32,81,117,50,32,87,0,7,0,111,30,28,78,28,0,58,82,42,81,97,43,54,96,42,14,39,7,21,62,108,114,50,0,72,76,51,77,10,66,70,};
		int [] load8_1 ={84,56,0,44,103,90,44,95,101,61,88,41,36,0,28,67,47,41,0,7,102,100,82,85,36,75,109,74,28,93,104,40,73,75,54,42,82,14,67,14,53,14,106,27,46,46,80,82,100,7,77,106,42,82,96,90,79,};
		int [] load8_2 ={91,77,74,74,20,54,80,46,25,80,14,46,25,81,39,101,46,51,95,42,15,114,5,7,7,78,62,84,93,98,103,87,61,41,89,15,64,0,0,0,74,50,74,39,96,42,111,46,};
		int [] load8_3 ={23,56,90,7,0,72,72,5,75,35,73,105,93,77,77,69,0,44,111,14,34,90,34,14,28,80,0,61,64,52,41,108,7,68,0,40,7,36,36,52,77,0,82,50,40,14,92,42,50,103,70,99,81,68,98,85,48,94,110,99,93,68,95,60,7,50,111,36,};
		int [] load8_4 ={91,7,69,0,88,64,56,36,54,44,116,96,44,14,0,40,96,14,7,62,97,64,62,103,84,88,59,111,7,69,81,74,62,30,21,111,72,32,75,84,54,47,14,36,88,};
		
		int [] load10_0 ={111,87,90,7,78,14,88,75,61,85,88,50,0,106,42,55,14,32,65,46,7,101,59,0,72,69,69,50,48,7,106,50,41,78,7,41,80,5,36,52,64,46,7,53,7,70,14,67,21,53,50,35,56,0,83,101,52,108,7,14,0,28,53,81,117,21,84,94,0,100,62,80,7,28,49,56,14,47,14,0,65,};
		int [] load10_1 ={78,102,75,84,97,0,66,86,84,91,96,100,7,76,101,7,81,14,69,50,93,65,58,53,32,107,64,};
		int [] load10_2 ={94,7,101,40,78,92,0,80,41,88,48,114,68,14,72,40,14,86,77,50,48,74,111,48,7,94,46,0,99,72,57,33,96,43,92,80,0,108,54,52,0,79,85,21,42,90,74,35,103,38,114,0,43,59,71,14,92,0,98,14,67,64,107,70,61,64,7,};
		int [] load10_3 ={85,106,14,50,21,0,84,50,51,68,83,67,0,0,95,7,50,45,47,0,21,64,40,0,14,67,7,5,39,82,36,78,14,99,39,47,111,81,35,71,42,51,104,78,14,89,0,65,87,53,80,85,94,111,51,39,57,53,50,7,81,84,36,62,7,82,7,83,39,14,52,50,93,56,63,};
		int [] load10_4 ={61,91,101,34,39,62,36,106,47,54,68,21,0,56,42,72,21,84,83,103,28,42,14,0,5,56,56,36,32,34,98,5,111,40,7,46,57,94,};
		
		backupVMbyNaive.add(load2_0);
		backupVMbyNaive.add(load2_1);
		backupVMbyNaive.add(load2_2);
		backupVMbyNaive.add(load2_3);
		backupVMbyNaive.add(load2_4);
		
		backupVMbyNaive.add(load4_0);
		backupVMbyNaive.add(load4_1);
		backupVMbyNaive.add(load4_2);
		backupVMbyNaive.add(load4_3);
		backupVMbyNaive.add(load4_4);
		
		backupVMbyNaive.add(load6_0);
		backupVMbyNaive.add(load6_1);
		backupVMbyNaive.add(load6_2);
		backupVMbyNaive.add(load6_3);
		backupVMbyNaive.add(load6_4);
		
		backupVMbyNaive.add(load8_0);
		backupVMbyNaive.add(load8_1);
		backupVMbyNaive.add(load8_2);
		backupVMbyNaive.add(load8_3);
		backupVMbyNaive.add(load8_4);
		
		backupVMbyNaive.add(load10_0);
		backupVMbyNaive.add(load10_1);
		backupVMbyNaive.add(load10_2);
		backupVMbyNaive.add(load10_3);
		backupVMbyNaive.add(load10_4);
		
		return backupVMbyNaive;
	}
	
	
	public ArrayList<int[]> getbackupBwBySVMPBG()
	{
		ArrayList<int[]> backupVMbySVMPBG = new ArrayList<int[]>();
		
		int [] load2_0 ={54,28,62,63,77,52,57,60,71,5,34,81,54,25,5,72,69,46,75,69,40,34,0,76,81,10,72,43,69,15,50,57,34,10,57,54,48,20,69,57,63,86,66,15,78,81,46,36,60,77,14,93,14,63,10,0,30,49,44,68,48,52,48,10,42,50,0,81,10,81,35,20,5};
		int [] load2_1 ={40,60,50,5,73,48,57,72,36,54,81,56,63,57,10,75,10,5,7,10,54,15,0,21,57,72,60,64,42,10,32,45,45,57,15,81,60,44,42,46,51,20,81,21,60,83,51,66,36,60,66,10,20,15,66,31,30,15,5,48,46,69,43,36,52,15,0,10,81,78,63};
		int [] load2_2 ={40,24,71,64,0,15,50,36,0,62,20,81,60,69,48,55,15,52,15,40,72,54,52,41,69,15,66,10,81,30,0,50,60,50,25,66,24,28,0,44,37,63,5,10,60,84,28,57,48,83,72,66,42,51,54,5,31,49,25,72,33,40,0,10,31,0,78,15,60};
		int [] load2_3 ={36,59,84,49,48,54,44,60,28,50,58,0,32,72,66,5,28,69,64,30,46,54,36,72,0,15,56,20,10,72,46,52,14,20,7,46,63,64,46,54,36,0,56,5,76,64,15,78,31,60,83,32,52,84,76,0,24,71,32,66,48,45,28,60};
		int [] load2_4 ={83,30,27,60,0,10,0,60,43,81,80,0,46,63,81,48,15,0,10,78,0,5,78,34,36,39,28,83,30,44,20,36,52,10,25,0,72,46,0,57,52,10,36,57,10,64,55,5,15,89,42,78,88,5,60,32,54,54,81,0,0,0,75,54,73,87,10,36,30};
		
		int [] load4_0 ={36,60,0,81,57,56,42,20,7,78,69,5,75,37,46,54,60,46,27,15,57,75,36,10,63,4,31,41,63,28,66,81,20,83,30,73,25,20,14,25,40,87,0,54,5,46,10};
		int [] load4_1 ={46,5,5,42,5,36,36,10,5,10,36,30,48,81,14,14,75,0,71,66,78,63,7,14,0,14,25,60,5,57,63,36,52,66,0,40,66,9,7,63,32,60,84,50,76,20,66,72,15,14,27,75,49,87,81,60,0};
		int [] load4_2 ={29,40,0,36,60,8,72,75,5,43,37,42,66,36,62,33,10,7,52,25,50,36,63,5,83,24,33,60,25,81,28,32,69,63,48,42,43,39,0,60,38,81,0,72,25,25};
		int [] load4_3 ={66,0,84,0,69,49,69,68,48,76,34,53,20,40,80,72,81,66,48,42,36,69,57,63,36,5,60,76,21,10,58,15,62,28,38,33,43,44,77,69,87,30,0,69,33,66,78,54,90,75,54,0};
		int [] load4_4 ={54,75,72,46,66,60,48,82,60,5,60,31,36,37,60,5,72,45,66,48,72,0,5,50,53,40,61,30,5,54,75,25,63,54,60,71,30,72,32,43};
		
		int [] load6_0 ={30,39,28,80,81,43,52,60,20,24,63,25,73,50,0,77,36,81,5,15,45,36,75,66,49,42,30,37,52,78,7};
		int [] load6_1 ={32,0,48,60,27,40,54,34,66,0,72,42,48,69,36,56,30,72,60,45,40,13,5,30,73,52,40,54,64,28,30,78};
		int [] load6_2 ={0,60,36,7,0,36,68,38,60,46,5,36,80,15,66,54,72,53,10,78};
		int [] load6_3 ={75,32,20,5,10,15,54,46,63,69,83,42,80,54,57,45,75,44,36,50,77,76,15,36,45,72,54,66,5,54,10,10,66,56,46,7};
		int [] load6_4 ={24,28,36,46,83,30,20,54,15,72,46,5,20,5,32,53,45,69,54,15,59,10,48,53,49,77,40,35,72,90,75,36,0,80,5,30,85,28,0,69,0,69,52};
		
		int [] load8_0 ={32,42,60,66,47,28,66,57,0,30,56,0,60,9,48,20,15,15,50,56,};
		int [] load8_1 ={72,46,0,69,75,57,36,0,77,0,66,48,32,54,54,20,54,36,42,28,32,60,72,4,77,37,57,60};
		int [] load8_2 ={69,57,25,46,63,60,37,56,25,60,10,32,32,25,66,31,78,15,52,45,66,83,5,42,50,62,5,15,84,7,5,66,66,19,7,5,5,54,30,72,36};
		int [] load8_3 ={23,48,66,5,5,64,5,58,54,25,75,63,0,59,45,81,69,78,28,5,34,0,52,5,67,0,0,50,84,10,38,66,63,72,81,5};
		int [] load8_4 ={69,5,60,5,42,7,15,60,76,56,48,32,49,14,10,35,71,66,48,21,40,10,48,42,45,21,81,48,50,54,72,48,39,66,44,};
		
		int [] load10_0 ={81,63,80,66,66,63,42,63,39,28,5,32,13,5,63,0,30,5,33,81};
		int [] load10_1 ={68,84,54,59,61,42,69,73,45,0,60,10,21,35,5,66,54,0,64,};
		int [] load10_2 ={72,5,60,48,38,48,72,45,43,60,51,25,83,85,7,10,72,48,30,14};
		int [] load10_3 ={63,78,72,45,59,0,34,45,75,72,57,15,63,10,50,36,76,48,51};
		int [] load10_4 ={52,69,75,32,78,30,50,21,15,0,54,75,66,5,81,32,52,46,83,};
		
		backupVMbySVMPBG.add(load2_0);
		backupVMbySVMPBG.add(load2_1);
		backupVMbySVMPBG.add(load2_2);
		backupVMbySVMPBG.add(load2_3);
		backupVMbySVMPBG.add(load2_4);
		
		backupVMbySVMPBG.add(load4_0);
		backupVMbySVMPBG.add(load4_1);
		backupVMbySVMPBG.add(load4_2);
		backupVMbySVMPBG.add(load4_3);
		backupVMbySVMPBG.add(load4_4);
		
		backupVMbySVMPBG.add(load6_0);
		backupVMbySVMPBG.add(load6_1);
		backupVMbySVMPBG.add(load6_2);
		backupVMbySVMPBG.add(load6_3);
		backupVMbySVMPBG.add(load6_4);
		
		backupVMbySVMPBG.add(load8_0);
		backupVMbySVMPBG.add(load8_1);
		backupVMbySVMPBG.add(load8_2);
		backupVMbySVMPBG.add(load8_3);
		backupVMbySVMPBG.add(load8_4);
		
		backupVMbySVMPBG.add(load10_0);
		backupVMbySVMPBG.add(load10_1);
		backupVMbySVMPBG.add(load10_2);
		backupVMbySVMPBG.add(load10_3);
		backupVMbySVMPBG.add(load10_4);
		
		return backupVMbySVMPBG;
	}
	
	
	public ArrayList<int[]> getbackupBwByPPDR()
	{
		ArrayList<int[]> backupVMbyPPDR = new ArrayList<int[]>();
		
		int [] load2_0 ={63,28,62,63,77,52,57,60,73,7,50,81,57,35,7,72,60,52,73,69,40,34,0,79,81,14,72,44,69,21,46,57,44,14,57,63,48,28,69,57,66,90,66,21,78,81,46,36,60,77,14,88,14,63,14,0,39,50,44,71,48,56,54,14,51,52,0,81,14,81,34,28,7};
		int [] load2_1 ={40,60,50,7,73,48,57,72,36,54,76,56,63,57,14,75,14,0,0,7,54,21,0,21,57,72,60,64,45,14,46,45,45,57,21,81,60,44,42,50,51,28,81,14,68,83,54,69,36,60,66,14,28,21,69,44,28,21,7,51,46,69,43,36,60,21,0,14,81,78,63};
		int [] load2_2 ={40,30,73,74,0,21,52,36,0,62,28,81,60,69,48,52,21,60,0,42,72,54,52,39,69,27,66,14,81,42,0,53,60,48,35,66,30,43,0,44,38,63,0,14,60,84,41,57,48,83,72,69,57,50,54,7,44,50,35,72,51,40,0,14,44,0,78,21,66};
		int [] load2_3 ={36,61,84,48,48,65,44,66,28,50,58,0,46,72,66,0,41,69,64,39,46,51,36,74,0,21,57,28,7,72,46,52,14,28,0,46,63,64,46,63,48,0,56,0,74,64,21,78,44,60,83,34,61,84,77,0,30,73,32,66,48,45,28,60};
		int [] load2_4 ={83,42,39,60,0,14,0,63,43,81,80,0,50,63,81,48,21,0,14,77,0,7,78,36,48,39,28,85,33,42,28,37,52,14,28,0,72,46,0,57,51,14,36,57,7,64,52,7,28,76,48,78,89,7,62,32,56,63,81,0,0,0,75,50,73,87,0,36,30};
		
		int [] load4_0 ={36,60,0,81,57,58,45,28,0,78,69,7,75,48,46,63,60,52,35,7,57,75,36,14,63,0,44,43,63,28,69,81,28,83,39,73,35,28,0,35,41,83,0,65,7,48,14};
		int [] load4_1 ={46,7,7,42,7,36,36,14,7,14,36,42,54,81,14,14,75,0,72,69,78,62,7,14,0,14,35,60,7,57,64,36,55,67,6,42,68,7,0,66,48,68,84,50,78,28,66,72,7,7,39,75,48,90,81,60,0};
		int [] load4_2 ={43,45,0,36,66,0,72,75,7,43,36,45,69,36,64,33,14,7,61,35,51,36,63,7,81,30,33,60,35,81,28,32,66,63,48,45,43,52,0,60,46,81,14,72,28,35};
		int [] load4_3 ={69,0,84,0,69,50,69,68,48,76,44,62,28,40,80,72,81,66,48,51,36,69,57,63,36,7,60,91,14,14,63,21,64,28,37,30,43,44,77,71,93,42,5,69,39,66,78,54,87,75,54,0};
		int [] load4_4 ={54,75,72,46,66,60,60,82,60,7,60,44,36,43,60,7,68,44,66,46,72,0,7,51,53,40,57,33,7,54,75,35,64,54,60,72,33,72,32,43};
		
		int [] load6_0 ={33,39,28,80,81,43,52,60,28,36,63,35,77,50,0,78,42,77,7,21,45,36,75,69,48,57,33,41,57,78,13};
		int [] load6_1 ={46,0,46,60,42,40,54,48,66,0,72,42,60,69,36,59,33,72,60,40,40,7,7,45,73,46,40,54,66,28,42,78,};
		int [] load6_2 ={0,60,36,6,0,42,60,50,60,46,7,42,80,14,66,63,72,52,14,78};
		int [] load6_3 ={75,32,28,7,14,21,54,46,63,69,80,42,80,50,57,43,75,44,36,50,72,76,21,39,43,72,65,66,7,63,14,14,66,56,50,0};
		int [] load6_4 ={30,30,38,54,85,42,14,57,21,72,46,7,28,7,32,55,43,69,63,21,56,14,51,48,50,77,40,35,72,90,75,36,0,76,13,42,80,41,6,69,12,69,52};
		
		int [] load8_0 ={32,42,60,69,44,28,69,57,0,42,54,0,60,14,60,28,21,14,52,56};
		int [] load8_1 ={72,46,0,69,75,52,36,0,68,0,66,48,32,63,54,28,63,36,42,41,32,60,72,0,77,38,57,60};
		int [] load8_2 ={69,57,28,46,66,60,43,66,35,60,14,50,46,35,69,39,77,21,46,44,69,83,7,42,52,63,7,21,84,7,7,66,67,21,0,0,0,54,33,72,36};
		int [] load8_3 ={34,48,66,7,7,70,14,54,63,35,75,65,0,60,49,81,67,78,28,7,35,0,52,7,64,7,0,52,72,14,38,69,63,72,81,7};
		int [] load8_4 ={69,7,66,0,57,0,21,60,76,56,48,34,44,14,14,28,75,66,54,21,40,14,48,42,45,21,81,60,46,63,72,51,39,66,44,};
		
		int [] load10_0 ={81,63,85,66,66,63,51,63,50,28,7,41,7,14,63,0,39,0,48,81};
		int [] load10_1 ={68,82,63,63,61,57,69,73,44,0,60,16,27,52,7,69,54,0,68};
		int [] load10_2 ={72,7,60,60,46,60,73,44,46,68,53,38,92,90,0,21,77,59,42,6};
		int [] load10_3 ={63,78,72,47,61,0,32,45,75,72,56,24,61,20,52,42,80,48,48};
		int [] load10_4 ={52,69,75,32,78,39,50,21,27,0,54,78,69,7,81,32,46,46,83};
		
		backupVMbyPPDR.add(load2_0);
		backupVMbyPPDR.add(load2_1);
		backupVMbyPPDR.add(load2_2);
		backupVMbyPPDR.add(load2_3);
		backupVMbyPPDR.add(load2_4);
		
		backupVMbyPPDR.add(load4_0);
		backupVMbyPPDR.add(load4_1);
		backupVMbyPPDR.add(load4_2);
		backupVMbyPPDR.add(load4_3);
		backupVMbyPPDR.add(load4_4);
		
		backupVMbyPPDR.add(load6_0);
		backupVMbyPPDR.add(load6_1);
		backupVMbyPPDR.add(load6_2);
		backupVMbyPPDR.add(load6_3);
		backupVMbyPPDR.add(load6_4);
		
		backupVMbyPPDR.add(load8_0);
		backupVMbyPPDR.add(load8_1);
		backupVMbyPPDR.add(load8_2);
		backupVMbyPPDR.add(load8_3);
		backupVMbyPPDR.add(load8_4);
		
		backupVMbyPPDR.add(load10_0);
		backupVMbyPPDR.add(load10_1);
		backupVMbyPPDR.add(load10_2);
		backupVMbyPPDR.add(load10_3);
		backupVMbyPPDR.add(load10_4);
		
		return backupVMbyPPDR;
	}
	
		
	public ArrayList<int[]> getbackupBwByWCS()
	{
		ArrayList<int[]> getbackupBwByWCS = new ArrayList<int[]>();
		
		int [] load2_0 ={63,27,54,63,69,48,51,57,66,21,48,75,57,33,21,72,57,48,66,63,39,30,15,69,75,24,72,39,63,27,42,51,39,24,51,63,42,30,63,51,54,75,60,21,72,72,42,36,54,69,24,75,24,57,24,18,39,45,42,63,48,51,54,24,51,51,15,75,24,75,33,30,21};
		int [] load2_1 ={36,60,45,21,66,45,51,66,36,48,69,54,57,57,24,69,24,18,15,21,48,27,18,27,57,66,60,60,45,24,42,45,45,51,27,75,54,42,36,48,51,30,75,24,57,75,45,60,33,54,60,24,30,27,69,39,27,27,21,42,42,69,39,33,51,27,18,18,75,72,57};
		int [] load2_2 ={36,30,66,63,15,27,51,36,18,54,30,75,60,63,45,48,27,60,18,36,66,54,48,39,63,27,60,24,72,36,15,51,60,45,33,60,30,39,18,42,33,57,18,24,57,75,39,51,48,75,66,69,57,45,54,21,39,45,33,66,45,36,15,24,39,15,72,27,57};
		int [] load2_3 ={33,51,75,45,42,63,42,66,27,45,51,18,42,66,60,18,39,63,60,39,42,45,36,66,15,27,51,30,21,66,42,48,24,30,18,42,57,60,42,63,48,18,54,15,66,60,27,72,39,54,75,30,51,75,69,15,30,66,30,60,48,45,27,54};
		int [] load2_4 ={75,36,36,54,15,24,18,54,39,75,75,18,48,57,72,48,27,15,24,69,18,21,72,30,48,39,27,75,33,36,30,33,48,24,30,18,66,42,15,51,48,24,36,51,21,60,51,21,27,75,45,72,75,15,60,27,54,63,75,18,18,15,69,48,66,75,18,36,27};
		
		int [] load4_0 ={36,54,18,75,51,51,45,30,15,72,63,21,69,45,42,63,54,48,33,21,51,69,33,24,63,18,39,42,57,27,69,72,30,75,39,66,33,30,15,33,36,75,15,63,18,42,21};
		int [] load4_1 ={42,21,21,42,21,36,36,24,21,24,36,36,54,72,24,24,69,18,63,69,72,54,18,24,18,24,33,54,18,51,57,36,48,60,15,36,66,21,15,57,45,57,75,45,66,30,60,66,21,21,36,69,45,75,75,54,15};
		int [] load4_2 ={42,39,15,36,66,15,66,69,21,39,33,45,69,33,54,33,24,21,51,33,45,33,57,15,69,30,33,57,33,75,27,30,60,57,48,45,39,51,15,60,42,72,18,69,30,33};
		int [] load4_3 ={69,15,75,18,63,45,63,66,42,75,39,60,30,39,72,66,75,60,42,51,36,63,57,57,33,21,54,75,24,24,63,27,54,27,33,27,42,42,69,63,75,36,18,63,36,60,72,54,75,69,48,15};
		int [] load4_4 ={48,69,66,42,60,54,60,72,54,21,54,39,33,39,54,21,60,39,60,42,66,15,21,45,45,36,57,33,21,54,69,33,57,54,54,72,33,66,30,39};
		
		int [] load6_0 ={33,39,27,72,75,39,48,54,30,36,57,33,63,45,18,69,42,66,21,27,39,36,69,69,45,57,33,39,48,72,21};
		int [] load6_1 ={42,15,42,54,36,36,48,48,60,15,72,36,60,63,33,51,33,72,60,39,36,21,21,45,66,42,39,54,60,27,36,72};
		int [] load6_2 ={18,60,36,18,15,42,57,42,54,42,21,42,75,24,66,63,66,51,24,72};
		int [] load6_3 ={69,30,30,21,24,27,48,42,57,63,75,42,75,45,57,39,69,39,33,45,66,75,27,33,39,72,63,60,21,63,24,24,60,54,48,18};
		int [] load6_4 ={30,27,33,54,75,36,24,57,27,69,42,21,30,21,30,48,39,63,63,27,51,24,42,45,45,69,36,33,66,75,63,36,15,72,21,36,75,39,15,63,15,63,51};
		
		int [] load8_0 ={30,42,57,69,39,27,69,51,18,36,54,18,57,21,60,30,27,24,51,54};
		int [] load8_1 ={66,42,18,63,69,48,30,15,66,15,60,48,30,63,48,30,63,33,36,39,30,54,66,15,69,33,51,57,};
		int [] load8_2 ={63,51,30,42,57,54,39,54,33,54,24,42,42,33,69,36,69,27,42,39,69,75,21,36,51,51,21,27,75,21,21,57,60,27,15,15,15,48,33,66,36};
		int [] load8_3 ={33,48,60,15,21,60,21,54,63,33,69,63,18,51,39,75,60,69,27,21,30,18,51,18,57,18,18,51,69,24,33,69,57,66,72,15};
		int [] load8_4 ={63,15,66,18,57,15,27,54,69,54,48,33,39,24,24,30,66,54,54,27,39,24,48,36,39,27,72,60,42,63,72,45,39,60,39};
		
		int [] load10_0 ={72,57,75,66,60,63,51,57,48,27,18,39,21,21,51,18,39,15,45,72};
		int [] load10_1 ={66,72,63,51,54,57,63,66,39,15,54,21,27,51,15,69,54,15,66};
		int [] load10_2 ={66,21,54,60,42,60,66,39,42,66,51,33,75,75,15,24,63,60,36,18,};
		int [] load10_3 ={57,72,72,39,51,15,30,45,69,63,51,21,54,24,51,42,75,48,45};
		int [] load10_4 ={48,63,69,30,72,39,45,27,27,18,54,63,69,21,72,30,42,42,75};
		
		getbackupBwByWCS.add(load2_0);
		getbackupBwByWCS.add(load2_1);
		getbackupBwByWCS.add(load2_2);
		getbackupBwByWCS.add(load2_3);
		getbackupBwByWCS.add(load2_4);
		
		getbackupBwByWCS.add(load4_0);
		getbackupBwByWCS.add(load4_1);
		getbackupBwByWCS.add(load4_2);
		getbackupBwByWCS.add(load4_3);
		getbackupBwByWCS.add(load4_4);
		
		getbackupBwByWCS.add(load6_0);
		getbackupBwByWCS.add(load6_1);
		getbackupBwByWCS.add(load6_2);
		getbackupBwByWCS.add(load6_3);
		getbackupBwByWCS.add(load6_4);
		
		getbackupBwByWCS.add(load8_0);
		getbackupBwByWCS.add(load8_1);
		getbackupBwByWCS.add(load8_2);
		getbackupBwByWCS.add(load8_3);
		getbackupBwByWCS.add(load8_4);
		
		getbackupBwByWCS.add(load10_0);
		getbackupBwByWCS.add(load10_1);
		getbackupBwByWCS.add(load10_2);
		getbackupBwByWCS.add(load10_3);
		getbackupBwByWCS.add(load10_4);
		
		return getbackupBwByWCS;
	}
	*/
	
	
	public  void filter () throws IOException
	{
		FileManipulation admittedReq = new FileManipulation("testResults/admittedReq.txt");
		
		FileManipulation backupVMNaive = new FileManipulation("testResults/backupVMNaive.txt");
		FileManipulation backupVMSVMPBG = new FileManipulation("testResults/backupVMSVMPBG.txt");
		FileManipulation backupVMPPDR = new FileManipulation("testResults/backupVMPPDR.txt");
		
		FileManipulation bwNaive = new FileManipulation("testResults/bwNaive.txt");
		FileManipulation bwSVMPBG = new FileManipulation("testResults/bwSVMPBG.txt");
		FileManipulation bwPPDR = new FileManipulation("testResults/bwPPDR.txt");
		FileManipulation bwWCS = new FileManipulation("testResults/bwWCS.txt");
		int []admittedNaive;
		int []admittedAllButNaive;
		
		ArrayList<int[]> admittedReqAllbutNaive = this.getAdmittedReqAllButNaive();
		ArrayList<int[]> admittedReqbyNaive = this.getAdmittedReqByNaive();
		
		//backup VM
		ArrayList<int[]> VMNaive = this.getbackupVMByNaive();
		ArrayList<int[]> VMSVMPBG = this.getbackupVMBySVMPBG();
		ArrayList<int[]> VMPPDR = this.getbackupVMByPPDR();
		
		//backup bw		
		ArrayList<int[]> bbwNaive = this.getbackupBwByNaive();
		ArrayList<int[]> bbwSVMPBG = this.getbackupBwBySVMPBG();
		ArrayList<int[]> bbwPPDR = this.getbackupBwByPPDR();
		ArrayList<int[]> bbwWCS = this.getbackupBwByWCS();
		
		//loop over all sets
		for (int i=0; i<admittedReqAllbutNaive.size();i++)
		{
			
			admittedReq.writeInFile("=====Set"+" "+i+"=====\n");
			backupVMNaive.writeInFile("=====Set"+" "+i+"=====\n");
			backupVMSVMPBG.writeInFile("=====Set"+" "+i+"=====\n");
			backupVMPPDR.writeInFile("=====Set"+" "+i+"=====\n");
			
			bwNaive.writeInFile("=====Set"+" "+i+"=====\n");
			bwSVMPBG.writeInFile("=====Set"+" "+i+"=====\n");
			bwPPDR.writeInFile("=====Set"+" "+i+"=====\n");
			bwWCS.writeInFile("=====Set"+" "+i+"=====\n");
			admittedAllButNaive = admittedReqAllbutNaive.get(i);
			admittedNaive = admittedReqbyNaive.get(i);
			
			for(int j=0;j<admittedNaive.length; j++)
			{
				for(int k=0; k<admittedAllButNaive.length; k++)
				{
					if (admittedNaive[j] != admittedAllButNaive[k])
					{
						continue;
					}
					
					//found common request
					admittedReq.writeInFile(admittedNaive[j]+"\n");
					backupVMNaive.writeInFile(VMNaive.get(i)[j]+"\n");
					backupVMSVMPBG.writeInFile(VMSVMPBG.get(i)[k]+"\n");
					backupVMPPDR.writeInFile(VMPPDR.get(i)[k]+"\n");
					
					bwNaive.writeInFile(bbwNaive.get(i)[j]+"\n");
					bwSVMPBG.writeInFile(bbwSVMPBG.get(i)[k]+"\n");
					bwPPDR.writeInFile(bbwPPDR.get(i)[k]+"\n");					
					bwWCS.writeInFile(bbwWCS.get(i)[k]+"\n");	
				}
			}
		}		
		
	}
	
	
	public static void main(String[]args) throws IOException{
		HelpBackupVMBw hb = new HelpBackupVMBw();
		hb.filter();
	}
	
	///set 2
	public ArrayList<int[]> getAdmittedReqAllButNaive()
	{
		ArrayList<int[]> admittedReqAllbutNaive = new ArrayList<int[]>();
		
		int [] load2_0 ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,21,22,25,26,27,28,29,30,31,32,33,35,38,39,41,42,43,44,45,46,47,49,51,52,53,54,55,56,57,58,59,60,61,64,65,66,67,68,72,73,74,75,76,77,78,79,82,83,84,85,86,87,89,90,91,93,94,97,98,99};
		int [] load2_1 ={0,1,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,65,66,67,68,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,89,90,91,93,95,97,98,99};
		int [] load2_2 ={0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,25,27,28,29,30,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,68,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,90,91,92,93,95,96,98};
		int [] load2_3 ={0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,23,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,51,52,53,54,55,56,57,58,59,65,66,67,68,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99};
		int [] load2_4 ={0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,71,72,73,74,75,76,77,78,79,81,82,84,85,86,87,89,90,91,92,96,97,98};
		
		int [] load4_0 ={0,1,4,5,6,12,15,16,23,24,26,27,31,32,34,35,40,42,44,45,47,48,49,50,51,52,53,56,58,63,64,71,73,77,79,81,82,83,84,85,87,90,91,94,95,98,99};
		int [] load4_1 ={0,1,4,6,9,10,11,12,23,24,26,32,38,39,41,42,44,48,49,50,51,52,54,58,59,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,96,99};
		int [] load4_2 ={0,1,2,4,5,6,9,10,13,16,21,22,23,24,26,31,32,38,39,42,45,47,48,49,50,51,52,53,70,71,73,75,77,78,79,80,81,82,83,84,85,87,90,91,92,94,95,98,99};
		int [] load4_3 ={0,1,3,4,5,6,9,11,16,21,22,26,27,29,31,32,35,42,46,47,48,49,50,51,52,53,54,60,61,63,64,70,72,73,76,77,78,79,80,81,82,83,84,85,87,89,90,94,95,98,99};
		int [] load4_4 ={0,1,3,4,6,7,8,9,10,11,12,16,17,20,21,22,24,26,27,31,32,38,39,42,43,47,48,49,50,51,52,56,64,69,71,72,73,74,77,78,79,80,81,82,83,84,85,87,88,89,90,94,95,96,98,99};
		
		int [] load6_0 ={0,1,3,4,5,6,8,9,21,23,24,25,27,31,33,35,36,37,38,40,45,46,47,49,50,56,65,67,68,69,71,72,74,75,78,80,83,84,88,90,91,92,97,98,99};
		int [] load6_1 ={0,1,2,3,7,9,10,11,23,24,25,26,27,31,35,36,37,39,42,46,48,49,50,55,56,65,67,71,84,90,92,94};
		int [] load6_2 ={0,1,2,3,4,8,9,10,11,16,19,20,23,24,25,26,35,37,42,46,47,48,50,51,67,68,69,70,72,73,75,84,85,88,90,92,94,97,99};
		int [] load6_3 ={0,1,2,3,4,11,21,27,35,45,46,48,49,51,55,56,67,69,71,72,74,85,88,91,92};
		int [] load6_4 ={0,1,2,3,4,8,9,10,16,18,20,21,22,23,24,25,27,28,30,31,35,38,46,48,56,62,65,67,69,70,71,72,75,83,84,85,87,88,89,90,91,92,93};
		
		int [] load8_0 ={0,1,2,6,12,13,14,15,16,17,18,19,22,32,35,46,47,48,49,50,51,52,55,62,63,64,65,66,68,71,73,80,81,82,88};
		int [] load8_1 ={0,1,2,4,14,15,17,18,19,31,44,48,51,52,55,57,59,66,73,74,81,82,91,92};
		int [] load8_2 ={0,1,2,3,6,14,15,16,17,18,35,39,44,47,49,50,51,53,55,56,63,76,81,82,83,89,90,91,92,94};
		int [] load8_3 ={0,1,2,3,6,14,15,17,18,19,20,21,32,33,40,50,55,56,66,69,73,81,82,85};
		int [] load8_4 ={0,1,2,3,6,8,12,15,16,17,18,19,21,25,31,32,44,47,49,52,53,55,56,67,70,73,80,81,82,83,91};
		
		int [] load10_0 ={0,1,2,6,8,14,16,18,19,29,31,37,38,43,44,50,57,75,80,81,86,95,96,99};
		int [] load10_1 ={0,1,2,7,8,11,14,16,18,28,29,31,41,44,57,58,75,80,84,92,95,99};
		int [] load10_2 ={0,1,3,6,8,14,18,29,31,33,37,38,43,45,50,65,67,72,74,80,82,84,99};
		int [] load10_3 ={0,1,2,3,6,7,8,18,26,29,42,44,57,65,70,80,92};
		int [] load10_4 ={0,1,2,6,8,14,16,20,22,23,29,31,32,37,38,41,43,44,50,66,78,81,84,86,92,98,99};
		
		admittedReqAllbutNaive.add(load2_0);
		admittedReqAllbutNaive.add(load2_1);
		admittedReqAllbutNaive.add(load2_2);
		admittedReqAllbutNaive.add(load2_3);
		admittedReqAllbutNaive.add(load2_4);
		
		admittedReqAllbutNaive.add(load4_0);
		admittedReqAllbutNaive.add(load4_1);
		admittedReqAllbutNaive.add(load4_2);
		admittedReqAllbutNaive.add(load4_3);
		admittedReqAllbutNaive.add(load4_4);
		
		admittedReqAllbutNaive.add(load6_0);
		admittedReqAllbutNaive.add(load6_1);
		admittedReqAllbutNaive.add(load6_2);
		admittedReqAllbutNaive.add(load6_3);
		admittedReqAllbutNaive.add(load6_4);
		
		admittedReqAllbutNaive.add(load8_0);
		admittedReqAllbutNaive.add(load8_1);
		admittedReqAllbutNaive.add(load8_2);
		admittedReqAllbutNaive.add(load8_3);
		admittedReqAllbutNaive.add(load8_4);
		
		admittedReqAllbutNaive.add(load10_0);
		admittedReqAllbutNaive.add(load10_1);
		admittedReqAllbutNaive.add(load10_2);
		admittedReqAllbutNaive.add(load10_3);
		admittedReqAllbutNaive.add(load10_4);
		
		return admittedReqAllbutNaive;
		
	}
	
	
	public ArrayList<int[]> getAdmittedReqByNaive()
	{
		ArrayList<int[]> admittedReqbyNaive = new ArrayList<int[]>();
		
		int [] load2_0 ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,89,90,91,92,94,97,98,99};
		int [] load2_1 ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,32,33,35,36,38,39,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,65,66,67,68,71,72,73,74,75,76,77,78,81,82,84,85,86,87,89,90,91,92,93,94,95,96,97,98};
		int [] load2_2 ={0,1,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,35,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,59,65,66,67,68,71,72,73,74,75,76,77,78,79,81,82,84,85,86,87,89,90,91,92,96,97,98,99};
		int [] load2_3 ={0,1,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,23,24,25,26,27,28,29,30,31,32,33,35,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,89,90,91,92,93,95,96,97,98,99};
		int [] load2_4 ={0,1,2,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,32,33,35,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,65,66,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99};
		
		int [] load4_0 ={0,1,2,3,4,6,9,11,12,13,14,15,16,18,20,21,22,23,26,32,33,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,98,99};
		int [] load4_1 ={0,1,4,5,6,9,11,16,17,18,19,20,21,22,23,24,26,34,38,40,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,90,91,92,93,94,95,96,97,98,99};
		int [] load4_2 ={0,1,4,5,6,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,47,48,49,50,51,52,54,57,58,59,60,61,62,63,65,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,87,90,91,92,94,95,98};
		int [] load4_3 ={0,1,2,3,4,6,9,11,16,20,21,22,24,26,27,31,38,39,40,42,44,47,48,49,50,51,52,53,61,62,63,64,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,98};
		int [] load4_4 ={0,1,4,6,7,9,10,11,12,13,15,16,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,90,91,94,95,98};
		
		int [] load6_0 ={0,1,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,31,32,33,34,35,38,40,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,77,81,82,83,84,85,86,87,88,90,91,97,98,99};
		int [] load6_1 ={0,1,2,3,4,5,6,7,8,9,10,11,16,17,19,20,21,22,23,24,27,28,29,30,31,32,33,34,35,37,42,46,48,49,50,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,74,75,76,77,78,79,83,84,87,89,90,92,94,95,96,98};
		int [] load6_2 ={0,1,2,3,4,8,10,16,19,20,21,22,23,24,27,28,29,30,31,32,33,34,35,37,42,46,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,83,84,85,86,87,88,89,90,91,92,93,94,97,98};
		int [] load6_3 ={0,1,3,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,35,37,38,39,40,42,43,44,46,47,48,49,55,56,65,66,67,68,69,70,72,75,76,77,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99};
		int [] load6_4 ={0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,22,23,24,27,31,35,37,38,39,42,43,44,45,46,48,49,50,51,55,56,65,66,67,68,69,70,71,72,73,74,75,83,84,85,86,87,88,90,91,92};
		
		int [] load8_0 ={0,1,2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,21,31,35,36,39,43,44,47,49,50,51,52,55,56,57,58,59,60,61,62,63,67,68,69,70,71,72,73,74,75,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99};
		int [] load8_1 ={0,1,2,3,6,7,12,13,14,15,17,18,19,20,21,31,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,62,63,64,65,66,69,70,73,77,81,83,88,89,91,95,96,97,98,99};
		int [] load8_2 ={0,1,2,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,39,44,47,49,50,52,53,55,56,57,58,59,60,61,62,63,67,68,69,70,73,74,80,81,82,83,88,91,93,94,95};
		int [] load8_3 ={0,1,2,3,6,13,14,15,17,18,19,20,21,32,33,35,36,47,49,50,55,56,62,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88};
		int [] load8_4 ={0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,39,40,41,42,43,44,47,48,49,50,52,55,56,62,63,64,65,66,67,70,73,77,78,80,81,82,83,88,91,95};
		
		int [] load10_0 ={0,1,2,3,6,7,8,9,14,16,17,18,19,22,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,65,84,85,86,87,88,89,90,92,95,99};
		int [] load10_1 ={0,1,6,8,14,16,17,22,26,28,29,30,31,32,33,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,65,75,80,84,85,90,92,93,95,97,99};
		int [] load10_2 ={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,50,57,65,75,80,84,90,92,99};
		int [] load10_3 ={0,1,6,7,8,14,18,19,29,30,31,32,37,42,43,44,45,46,47,50,57,65,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99};
		int [] load10_4 ={0,1,2,6,7,8,9,10,11,12,13,14,16,18,19,20,21,22,23,24,27,28,29,31,50,57,65,66,75,81,84,90,92,97,99};
		
		admittedReqbyNaive.add(load2_0);
		admittedReqbyNaive.add(load2_1);
		admittedReqbyNaive.add(load2_2);
		admittedReqbyNaive.add(load2_3);
		admittedReqbyNaive.add(load2_4);
		
		admittedReqbyNaive.add(load4_0);
		admittedReqbyNaive.add(load4_1);
		admittedReqbyNaive.add(load4_2);
		admittedReqbyNaive.add(load4_3);
		admittedReqbyNaive.add(load4_4);
		
		admittedReqbyNaive.add(load6_0);
		admittedReqbyNaive.add(load6_1);
		admittedReqbyNaive.add(load6_2);
		admittedReqbyNaive.add(load6_3);
		admittedReqbyNaive.add(load6_4);
		
		admittedReqbyNaive.add(load8_0);
		admittedReqbyNaive.add(load8_1);
		admittedReqbyNaive.add(load8_2);
		admittedReqbyNaive.add(load8_3);
		admittedReqbyNaive.add(load8_4);
		
		admittedReqbyNaive.add(load10_0);
		admittedReqbyNaive.add(load10_1);
		admittedReqbyNaive.add(load10_2);
		admittedReqbyNaive.add(load10_3);
		admittedReqbyNaive.add(load10_4);
		
		return admittedReqbyNaive;
	}
	
	public ArrayList<int[]> getbackupVMByNaive()
	{
		ArrayList<int[]> backupVMbyNaive = new ArrayList<int[]>();
		
		int [] load2_0 ={5,6,2,6,6,5,5,3,3,6,2,3,6,4,6,2,3,2,3,6,6,6,2,5,3,5,2,2,2,6,6,6,2,2,2,2,2,3,2,6,3,5,3,6,2,2,5,6,6,3,6,4,3,2,5,4,3,6,6,6,2,5,6,6,6,2,2,5,2,6,5,5,4,6,2,2,2,2,2,6,6,2,4,6,6,3,6,2,2,2};
		int [] load2_1 ={6,2,3,5,4,6,2,2,2,3,2,6,2,6,5,6,4,2,6,3,4,2,2,2,2,2,2,6,2,2,3,6,6,5,4,3,6,3,6,6,6,5,6,6,5,2,6,2,3,6,4,5,2,2,6,3,2,2,6,5,2,3,3,6,3,5,2,6,4,6,5,2,2,2,2,2,5,2,3,6,5,6};
		int [] load2_2 ={2,6,6,5,4,5,5,6,6,6,6,6,2,3,2,6,6,3,2,5,5,2,2,4,2,2,6,6,6,5,2,2,5,5,2,2,6,5,2,6,6,2,2,6,3,3,2,6,6,3,2,6,4,3,3,3,2,2,4,6,4,6,6,2,2,3,6,2,6,2,6,5,6,3,3,2,2,2};
		int [] load2_3 ={6,6,6,5,6,3,2,5,2,2,6,3,3,5,5,3,5,5,3,6,2,2,5,2,6,4,6,3,2,3,2,3,2,2,3,6,6,2,4,2,3,3,2,6,5,4,2,6,2,6,6,2,6,2,5,5,2,4,3,2,6,6,4,4,2,2,4,6,5,2,6,4,4,6,2,6,3,2,2,2,2,6,6,2,6,3,6};
		int [] load2_4 ={2,2,4,2,6,2,4,2,6,3,2,3,2,3,6,2,2,5,6,6,6,3,6,6,3,6,6,2,3,6,2,6,2,2,3,2,3,6,5,4,5,6,4,3,3,5,2,2,6,2,4,2,5,6,6,2,6,6,5,6,6,3,2,2,3,3,2,2,2,6,3,3,2,2,4,2,3,4,4,6};
		
		int [] load4_0 ={2,4,3,3,6,2,5,2,5,2,5,4,5,2,2,6,5,3,6,4,6,2,2,6,2,6,6,5,2,6,3,5,2,2,4,3,2,4,6,3,3,2,6,4,2,2,3,6,6,2,5,6,2,2,3,3,6,6,4,2,6,2};
		int [] load4_1 ={4,3,3,6,2,6,6,2,2,4,2,4,3,6,2,4,6,2,6,3,2,2,3,6,6,3,2,2,6,4,3,4,6,6,6,5,3,2,2,3,4,4,6,3,6,3,3,2,2,3,3,2,6,3,2,2,2,6,6,3,6,2,2,4,4,6,5,3,2,2,3};
		int [] load4_2 ={6,2,2,1,3,5,6,2,5,6,3,6,3,2,2,5,2,2,2,6,2,2,6,2,6,2,5,6,2,5,6,2,5,6,6,2,2,2,5,4,3,3,2,3,5,2,6,2,2,6,2,6,3,6,4,6,6,2,3,3,2,6,4,3,6,3,3,2,6,2,5,5,5,2,5,3,2};
		int [] load4_3 ={2,2,5,5,3,2,3,6,4,3,2,2,3,6,2,2,2,5,4,2,2,6,2,6,6,6,5,2,6,6,6,3,2,6,2,4,2,2,2,6,6,3,3,2,2,6,6,2,5,2,2,3,5,6,3,2,2,4};
		int [] load4_4 ={4,2,6,6,4,5,6,6,6,2,2,6,3,2,3,6,3,3,2,3,3,6,2,5,6,2,4,3,2,2,6,2,6,2,4,6,5,6,3,6,2,2,3,6,6,6,6,2,3,4,2,6,6,2,1,4,6,4,6,6,6,6,4,2,3,2,2,3,2,6,6,6,3,6,6,2,5,4};
		
		int [] load6_0 ={6,2,5,5,6,2,2,6,4,4,3,5,5,2,4,3,5,4,6,3,2,3,5,2,2,2,6,6,5,4,3,2,4,6,5,2,2,2,6,3,2,6,6,2,2,2,3,6,5,6,2,2,6,2,2,5,2,4,2,6,6,2,2,5,3,5,2,2,6,6};
		int [] load6_1 ={2,4,5,2,2,2,6,5,6,6,6,4,2,2,5,2,2,6,2,5,2,3,4,2,6,5,6,3,5,2,2,6,6,6,3,6,2,2,2,3,4,5,6,6,2,6,2,4,2,2,6,2,2,2,3,5,3,3,6,6,5,5,2,2,6,2,6,6};
		int [] load6_2 ={6,6,6,6,2,5,6,6,6,3,3,3,6,6,2,2,2,2,6,3,6,2,6,2,3,6,5,6,3,2,6,5,5,5,2,2,5,2,2,5,2,5,6,6,6,4,5,5,2,4,2,2,2,2,6,2,6,6,2,5,3,3,6,5,3,4};
		int [] load6_3 ={3,2,3,2,6,2,2,3,3,3,2,6,6,6,3,3,3,5,2,5,2,3,6,5,2,3,6,4,6,2,6,4,2,6,2,5,2,3,6,2,5,2,2,2,6,3,2,3,2,5,4,5,3,2,6,3,6,2,6,2,5,2,5,2,3,6,3,3,5};
		int [] load6_4 ={6,2,2,3,5,2,2,2,2,2,6,4,2,6,2,3,2,2,5,6,2,6,6,5,2,3,6,3,4,4,2,2,6,6,6,6,5,2,6,2,6,2,4,6,2,6,5,2,3,4,3,6,4,6,6,6,4,6,2};
		
		int [] load8_0 ={2,2,2,4,2,4,6,2,2,3,3,2,6,3,2,6,6,5,3,3,3,2,4,2,6,6,3,6,2,3,2,2,2,2,6,3,2,6,6,2,6,3,4,6,6,3,6,2,6,3,2,3,2,6,2,2,2,2,2,4,5,2,2,2};
		int [] load8_1 ={3,3,3,2,3,2,2,6,2,4,4,6,4,2,3,3,2,3,3,4,3,4,3,2,3,6,4,6,5,3,2,6,5,5,5,3,2,2,2,3,2,2,6,3,6,4,6,2,2,4,5,3,6,4,6,2};
		int [] load8_2 ={2,2,6,2,6,6,3,6,2,2,6,4,4,2,3,4,3,2,2,2,5,3,2,4,3,3,6,3,3,6,6,5,5,3,2,4,6,6,6,6,3,3,6,4,5,2,6,6,2,2,6,4,2,6,6,2,3,6};
		int [] load8_3 ={6,5,5,4,3,6,6,4,6,6,6,3,5,6,4,5,6,6,3,3,6,2,2,2,2,6,2,5,6,2,6,6,6,2,5,2,3,6,2,3,3,2,6};
		int [] load8_4 ={5,6,2,2,2,4,3,2,6,3,4,2,3,5,5,4,6,2,4,2,6,3,3,2,6,3,6,6,5,2,5,4,2,2,2,2,2,2,4,4,2,4,2,6,3,5,5,2,4,4,2,3,6,4,4,2,2,6,2,2,3,4,3};
		
		int [] load10_0 ={3,6,4,2,4,4,5,2,5,4,6,6,2,6,5,6,2,6,2,6,2,6,2,6,6,3,2,6,3,5,6,6,6,6,6,5,2,2,2,5,2,5,5,6,2,6};
		int [] load10_1 ={6,4,2,2,6,6,2,2,6,6,2,5,3,6,5,2,2,3,6,4,2,5,2,6,2,2,3,2,2,3,4,2,3,2,4,6,6,5,2,6,2,3,2,6};
		int [] load10_2 ={2,2,3,6,6,3,3,2,4,4,3,6,2,6,2,6,4,6,6,4,2,6,2,3,3,4,2,2,6,6,4,5,2,6,3,5,6,5,3,3,3};
		int [] load10_3 ={6,2,6,3,6,5,4,4,3,3,4,2,5,6,6,4,5,6,2,2,6,4,2,4,2,6,2,2,6,4,2,6,2,2,3,2,3,2,3,6,2,4,2,3,3,4,3};
		int [] load10_4 ={2,2,6,2,2,6,2,3,3,3,6,3,6,6,6,6,2,4,5,2,2,4,6,5,2,6,6,4,6,6,6,2,6,6,4};
		
		backupVMbyNaive.add(load2_0);
		backupVMbyNaive.add(load2_1);
		backupVMbyNaive.add(load2_2);
		backupVMbyNaive.add(load2_3);
		backupVMbyNaive.add(load2_4);
		
		backupVMbyNaive.add(load4_0);
		backupVMbyNaive.add(load4_1);
		backupVMbyNaive.add(load4_2);
		backupVMbyNaive.add(load4_3);
		backupVMbyNaive.add(load4_4);
		
		backupVMbyNaive.add(load6_0);
		backupVMbyNaive.add(load6_1);
		backupVMbyNaive.add(load6_2);
		backupVMbyNaive.add(load6_3);
		backupVMbyNaive.add(load6_4);
		
		backupVMbyNaive.add(load8_0);
		backupVMbyNaive.add(load8_1);
		backupVMbyNaive.add(load8_2);
		backupVMbyNaive.add(load8_3);
		backupVMbyNaive.add(load8_4);
		
		backupVMbyNaive.add(load10_0);
		backupVMbyNaive.add(load10_1);
		backupVMbyNaive.add(load10_2);
		backupVMbyNaive.add(load10_3);
		backupVMbyNaive.add(load10_4);
		
		return backupVMbyNaive;
	}
	
	
	public ArrayList<int[]> getbackupVMBySVMPBG()
	{
		ArrayList<int[]> backupVMbySVMPBG = new ArrayList<int[]>();
		
		int [] load2_0 ={5,6,2,6,6,6,5,3,3,6,2,3,6,4,6,2,3,2,5,6,2,3,5,2,2,2,6,6,6,2,2,2,3,6,3,5,3,6,2,2,6,3,6,4,3,2,5,4,3,6,6,6,5,6,6,6,2,5,2,6,5,5,4,6,2,2,2,2,6,6,2,4,6,6,5,6,2,2,2};
		int [] load2_1 ={6,2,3,5,2,2,2,3,2,6,2,6,5,6,4,2,5,6,4,2,2,2,2,6,2,2,3,3,6,6,6,5,3,4,6,3,6,6,6,5,6,6,6,6,2,6,2,3,6,4,5,2,2,6,3,2,2,6,5,2,3,3,6,3,5,5,5,5,3,4,6,5,2,2,2,2,5,3,5,6,6};
		int [] load2_2 ={2,6,6,5,2,4,5,4,6,6,6,6,6,2,3,2,5,5,3,5,3,2,4,2,2,6,6,5,2,2,6,4,2,5,2,2,6,4,2,6,6,2,2,2,6,3,3,2,6,6,3,3,2,5,6,4,3,3,3,2,2,4,6,4,6,6,2,2,3,6,6,2,6,2,6,5,6,3,2,4,3,2};
		int [] load2_3 ={6,6,6,5,5,6,3,2,5,2,2,6,3,3,5,5,3,6,6,3,6,2,5,2,6,4,6,3,2,3,6,2,6,3,2,6,2,3,6,6,2,4,2,6,5,4,2,6,2,6,6,2,4,3,2,2,4,4,2,2,4,6,4,2,6,6,4,4,5,2,6,3,3,2,2,2,6,6,6,2,6,3,6};
		int [] load2_4 ={2,2,4,2,6,6,2,4,2,6,3,2,3,2,3,6,2,2,6,6,6,6,3,6,6,3,6,6,2,6,3,6,2,6,6,2,3,2,3,6,5,4,4,6,4,3,3,5,2,2,6,2,3,4,4,2,5,5,5,6,2,6,6,5,6,6,3,2,2,3,2,2,2,3,3,2,5,3,4,4};
		
		int [] load4_0 ={2,4,6,2,2,6,4,4,3,2,6,2,3,4,6,6,6,6,5,2,3,5,2,2,4,3,5,6,6,6,6,4,3,6,2,3,6,6,2,5,2,3,6,4,2,6,2};
		int [] load4_1 ={4,3,3,2,6,6,6,4,2,4,5,6,6,6,5,5,2,3,6,6,3,2,6,6,6,6,3,3,2,2,3,2,6,3,2,2,2,6,6,3,5,5,5,6,2,6,5,4,3};
		int [] load4_2 ={6,2,3,2,1,3,6,6,5,6,2,2,2,6,2,5,5,6,6,2,6,2,5,4,3,3,2,3,5,6,3,2,4,4,3,6,3,3,2,6,2,5,3,3,2,5,3,3,5};
		int [] load4_3 ={2,2,6,3,6,2,3,6,4,2,2,6,2,6,2,6,5,2,6,6,2,6,6,6,6,2,3,5,6,5,3,6,4,2,6,6,3,3,2,2,6,6,2,5,2,5,6,2,2,4,6};
		int [] load4_4 ={4,2,6,6,6,4,5,5,6,4,6,6,6,6,2,3,3,2,3,5,6,6,2,6,2,4,6,5,6,3,6,6,6,6,6,4,6,6,6,4,2,3,2,2,3,2,6,6,3,3,6,2,5,2,4,2};
		
		int [] load6_0 ={6,2,5,5,6,4,2,6,6,2,3,5,2,2,6,5,6,6,3,2,6,4,6,2,4,2,3,6,6,6,2,6,2,4,6,6,6,6,3,5,2,5,2,6,6};
		int [] load6_1 ={2,4,5,2,5,6,6,4,2,5,6,6,2,6,5,6,2,6,2,6,6,6,3,6,2,6,5,6,6,2,3,6};
		int [] load6_2 ={6,6,6,6,2,5,2,6,3,6,6,3,6,6,2,6,6,2,3,6,3,5,6,4,2,5,6,6,4,5,2,2,5,6,5,3,6,3,6};
		int [] load6_3 ={3,2,5,3,2,3,5,5,3,5,6,5,2,6,3,6,2,2,4,3,3,3,2,6,2};
		int [] load6_4 ={6,2,6,2,3,2,2,2,3,2,5,6,6,2,6,2,6,3,6,5,2,6,6,6,6,6,2,2,6,2,6,5,4,3,6,4,6,6,6,4,4,2,6};
		
		int [] load8_0 ={2,2,2,6,6,6,5,3,2,6,6,4,6,5,3,6,6,6,3,6,2,3,2,6,6,6,6,2,6,5,3,6,3,2,2};
		int [] load8_1 ={3,3,3,4,2,4,4,6,4,3,6,2,6,5,3,5,6,2,6,5,6,6,5,4};
		int [] load8_2 ={2,2,6,2,2,6,3,6,2,2,6,3,3,6,6,5,6,3,2,4,6,4,6,5,2,6,1,6,6,3};
		int [] load8_3 ={6,5,5,4,3,6,4,6,6,6,3,5,6,4,6,3,6,2,2,5,6,3,3,5};
		int [] load8_4 ={5,6,2,2,3,6,3,6,4,6,2,4,6,6,5,4,1,4,5,6,3,2,4,3,6,4,2,6,2,2,4};
		
		int [] load10_0 ={3,5,4,4,6,5,4,6,2,6,6,6,6,6,3,6,2,2,6,6,2,2,4,5};
		int [] load10_1 ={6,4,5,3,2,5,6,6,6,6,2,3,6,6,3,3,4,6,6,6,3,6};
		int [] load10_2 ={2,2,6,3,4,2,6,6,5,5,6,5,6,3,2,3,5,6,6,6,6,5,3};
		int [] load10_3 ={6,2,5,5,6,3,6,4,6,3,6,4,6,4,5,2,6};
		int [] load10_4 ={2,2,6,2,6,3,6,6,5,5,6,5,6,6,5,6,2,3,2,4,5,5,6,6,6,5,4};
		
		backupVMbySVMPBG.add(load2_0);
		backupVMbySVMPBG.add(load2_1);
		backupVMbySVMPBG.add(load2_2);
		backupVMbySVMPBG.add(load2_3);
		backupVMbySVMPBG.add(load2_4);
		
		backupVMbySVMPBG.add(load4_0);
		backupVMbySVMPBG.add(load4_1);
		backupVMbySVMPBG.add(load4_2);
		backupVMbySVMPBG.add(load4_3);
		backupVMbySVMPBG.add(load4_4);
		
		backupVMbySVMPBG.add(load6_0);
		backupVMbySVMPBG.add(load6_1);
		backupVMbySVMPBG.add(load6_2);
		backupVMbySVMPBG.add(load6_3);
		backupVMbySVMPBG.add(load6_4);
		
		backupVMbySVMPBG.add(load8_0);
		backupVMbySVMPBG.add(load8_1);
		backupVMbySVMPBG.add(load8_2);
		backupVMbySVMPBG.add(load8_3);
		backupVMbySVMPBG.add(load8_4);
		
		backupVMbySVMPBG.add(load10_0);
		backupVMbySVMPBG.add(load10_1);
		backupVMbySVMPBG.add(load10_2);
		backupVMbySVMPBG.add(load10_3);
		backupVMbySVMPBG.add(load10_4);
		
		return backupVMbySVMPBG;
	}
	
	
	public ArrayList<int[]> getbackupVMByPPDR()
	{
		ArrayList<int[]> backupVMbyPPDR = new ArrayList<int[]>();
		
		int [] load2_0 ={5,6,2,6,6,5,5,3,3,6,2,3,6,4,6,2,3,2,6,6,2,3,5,2,2,2,6,6,6,2,2,2,3,6,3,5,3,6,2,2,6,3,6,4,3,2,5,4,3,6,6,6,5,6,6,6,2,5,2,6,5,5,4,6,2,2,2,2,6,6,2,4,6,6,5,6,2,2,2};
		int [] load2_1 ={6,2,3,5,2,2,2,3,2,6,2,6,5,6,4,2,6,6,4,2,2,2,2,6,2,2,3,3,6,6,6,5,3,4,6,3,6,6,6,5,6,6,6,6,2,6,2,3,6,4,5,2,2,6,3,2,2,6,5,2,3,3,6,3,5,5,5,6,3,4,6,5,2,2,2,2,5,3,5,6,6};
		int [] load2_2 ={2,6,6,5,2,4,5,5,6,6,6,6,6,2,3,2,6,6,3,5,3,2,4,2,2,6,6,5,2,2,6,4,2,5,2,2,6,5,2,6,6,2,2,2,6,3,3,2,6,6,3,3,2,5,6,4,3,3,3,2,2,4,6,4,6,6,2,2,3,6,6,2,6,2,6,5,6,3,2,4,3,2};
		int [] load2_3 ={6,6,6,5,5,6,3,2,5,2,2,6,3,3,5,5,3,6,6,3,6,2,5,2,6,4,5,3,2,3,6,2,6,3,2,5,2,3,6,6,2,4,2,6,5,4,2,6,2,6,6,2,4,3,2,2,4,4,2,2,4,6,5,2,6,6,4,4,6,2,6,3,3,2,2,2,6,6,6,2,6,3,6};
		int [] load2_4 ={2,2,4,2,6,6,2,4,2,6,3,2,3,2,3,6,2,2,6,6,6,6,3,6,6,3,6,6,2,6,3,6,2,6,6,2,3,2,3,6,5,4,5,6,4,3,3,5,2,2,6,2,3,4,4,2,5,5,5,6,2,6,6,5,6,6,3,2,2,3,2,2,2,3,3,2,5,3,4,4};
		
		int [] load4_0 ={2,4,6,2,2,6,4,4,3,2,6,2,3,4,6,5,6,6,5,2,3,5,2,2,4,3,5,6,6,5,5,4,3,6,2,3,6,6,2,5,2,3,5,4,2,6,2};
		int [] load4_1 ={4,3,3,2,6,6,6,4,2,4,6,6,6,6,5,5,2,3,6,6,3,2,6,6,6,6,3,3,2,2,3,2,6,3,2,2,2,6,6,3,5,6,5,5,2,6,5,3,3};
		int [] load4_2 ={6,2,3,2,1,3,5,6,5,6,2,2,2,6,2,5,6,6,6,2,6,2,5,4,3,3,2,3,6,6,3,2,6,4,3,6,3,3,2,6,2,5,5,5,2,5,3,3,5};
		int [] load4_3 ={2,2,6,3,6,2,3,6,4,2,2,6,2,6,2,6,5,2,6,6,2,6,6,6,6,2,3,5,6,6,3,6,4,2,6,6,3,3,2,2,6,6,2,5,2,5,6,2,2,4,6};
		int [] load4_4 ={4,2,6,6,6,4,5,5,6,6,6,6,6,6,2,3,3,2,3,5,6,6,2,6,2,4,6,5,6,3,6,6,6,6,6,4,6,6,6,4,2,3,2,2,3,2,5,6,3,3,6,2,6,2,4,2};
		
		int [] load6_0 ={6,2,5,5,6,4,2,6,6,2,3,5,2,2,6,5,6,6,3,2,6,4,6,2,4,2,3,6,6,6,2,6,2,4,6,4,6,6,3,5,2,5,2,6,6};
		int [] load6_1 ={2,4,5,2,6,6,6,4,2,5,6,6,2,6,5,6,2,6,2,6,6,6,3,6,2,6,5,6,6,2,2,6};
		int [] load6_2 ={6,6,6,6,2,5,2,6,3,6,6,3,6,6,2,6,5,2,3,6,3,5,6,4,2,5,6,6,4,5,2,2,5,6,6,3,5,3,6};
		int [] load6_3 ={3,2,5,3,2,3,5,5,3,5,6,6,2,6,3,6,2,2,4,3,3,3,2,6,2};
		int [] load6_4 ={6,2,6,2,3,2,2,2,3,2,5,6,6,2,5,2,6,3,6,5,2,6,6,6,6,6,2,2,6,2,6,5,4,3,6,6,6,6,6,4,6,2,6};
		
		int [] load8_0 ={2,2,2,6,6,5,5,3,2,6,6,5,6,6,3,6,6,6,3,6,2,3,2,6,6,6,6,2,6,6,3,6,3,2,2};
		int [] load8_1 ={3,3,3,4,2,4,4,6,4,3,6,2,6,5,3,6,6,2,6,6,6,6,5,4};
		int [] load8_2 ={2,2,6,2,2,6,3,6,2,2,6,3,3,6,6,5,6,3,2,4,6,4,6,5,2,6,4,6,6,3};
		int [] load8_3 ={6,5,5,4,3,6,4,6,6,6,3,5,6,4,6,3,6,2,2,5,6,3,3,5};
		int [] load8_4 ={5,6,2,2,3,6,3,6,3,6,2,4,6,6,5,4,4,3,6,6,3,3,5,3,6,4,2,6,2,2,4};
		
		int [] load10_0 ={3,6,4,4,6,4,4,6,2,6,6,6,6,6,3,6,2,2,6,6,2,2,4,5};
		int [] load10_1 ={6,4,5,3,2,5,6,6,6,6,2,3,6,6,3,3,4,6,6,6,3,6};
		int [] load10_2 ={2,2,6,3,4,2,6,6,5,5,6,5,6,3,2,3,5,6,6,6,6,5,3};
		int [] load10_3 ={6,2,6,5,6,3,6,4,6,3,6,4,6,4,5,2,6};
		int [] load10_4 ={2,2,6,2,6,3,6,6,4,5,4,5,6,6,6,6,2,3,2,4,6,5,6,6,6,5,4};
		
		backupVMbyPPDR.add(load2_0);
		backupVMbyPPDR.add(load2_1);
		backupVMbyPPDR.add(load2_2);
		backupVMbyPPDR.add(load2_3);
		backupVMbyPPDR.add(load2_4);
		
		backupVMbyPPDR.add(load4_0);
		backupVMbyPPDR.add(load4_1);
		backupVMbyPPDR.add(load4_2);
		backupVMbyPPDR.add(load4_3);
		backupVMbyPPDR.add(load4_4);
		
		backupVMbyPPDR.add(load6_0);
		backupVMbyPPDR.add(load6_1);
		backupVMbyPPDR.add(load6_2);
		backupVMbyPPDR.add(load6_3);
		backupVMbyPPDR.add(load6_4);
		
		backupVMbyPPDR.add(load8_0);
		backupVMbyPPDR.add(load8_1);
		backupVMbyPPDR.add(load8_2);
		backupVMbyPPDR.add(load8_3);
		backupVMbyPPDR.add(load8_4);
		
		backupVMbyPPDR.add(load10_0);
		backupVMbyPPDR.add(load10_1);
		backupVMbyPPDR.add(load10_2);
		backupVMbyPPDR.add(load10_3);
		backupVMbyPPDR.add(load10_4);
		
		return backupVMbyPPDR;
	}
	
	
	public ArrayList<int[]> getbackupBwByNaive()
	{
		ArrayList<int[]> backupVMbyNaive = new ArrayList<int[]>();
		
		int [] load2_0 ={58,7,98,55,50,21,0,39,114,5,32,36,5,56,0,70,69,101,36,0,46,81,93,0,65,90,48,36,96,14,0,14,103,101,64,85,50,46,111,84,69,64,36,20,85,48,7,21,14,107,0,99,104,50,0,77,62,14,28,0,74,45,7,28,94,93,103,61,107,10,90,67,53,21,80,45,32,48,111,84,20,36,84,0,7,97,44,91,101,111};
		int [] load2_1 ={84,98,62,58,68,14,46,93,40,36,36,117,90,10,0,0,50,66,5,87,47,68,96,90,88,83,98,33,90,80,58,21,47,0,56,73,0,36,75,35,0,0,50,0,7,80,10,96,111,32,23,45,40,108,46,46,68,100,15,0,61,54,54,30,54,0,111,5,34,20,61,64,70,111,77,40,0,36,42,7,0,59};
		int [] load2_2 ={108,35,69,45,68,117,0,10,36,14,15,75,98,96,105,0,5,63,84,85,41,108,70,88,111,66,78,0,28,39,95,74,97,0,109,32,10,0,91,7,5,35,85,78,75,114,87,15,0,42,93,35,47,108,94,81,48,36,47,0,80,69,69,46,79,114,52,105,10,111,81,82,21,81,39,49,84,56};
		int [] load2_3 ={84,21,25,45,75,60,66,0,105,57,0,54,81,0,0,86,7,21,101,14,55,101,64,105,31,66,7,95,86,90,77,71,74,74,46,75,0,50,60,50,66,68,93,5,58,96,48,5,80,52,14,96,0,77,41,14,45,7,63,85,28,21,65,72,103,70,84,10,0,66,69,53,104,0,74,0,104,91,108,54,80,25,72,83,54,65,72};
		int [] load2_4 ={70,80,68,80,5,56,92,36,30,62,101,54,51,85,0,54,101,14,7,47,78,60,10,28,46,31,21,90,78,7,51,5,101,80,50,80,36,0,101,96,0,21,90,107,73,0,74,74,33,36,99,40,43,0,5,106,0,5,86,46,0,54,44,77,93,72,94,105,54,48,103,36,98,38,34,62,42,68,64,21};
		
		int [] load4_0 ={85,84,78,68,28,91,0,104,14,86,0,84,0,59,46,14,56,77,44,104,28,111,85,52,111,35,0,45,80,0,69,0,91,77,115,103,46,34,72,69,50,66,36,36,85,35,36,81,25,77,61,35,108,108,114,46,7,7,53,64,35,95};
		int [] load4_1 ={60,55,114,28,103,50,78,111,44,122,111,24,36,0,105,81,7,37,42,36,96,68,114,0,7,39,74,108,28,116,107,107,35,52,0,14,80,93,98,36,34,34,42,73,49,73,61,36,78,111,57,70,7,114,56,42,88,5,0,100,0,91,108,50,90,72,64,79,93,64,62};
		int [] load4_2 ={0,54,96,62,72,64,69,106,64,7,77,21,67,68,56,0,112,112,83,35,60,40,0,70,14,75,55,0,54,14,28,70,0,20,21,83,47,48,0,72,72,114,75,101,14,66,0,91,77,14,71,81,42,0,7,0,14,97,112,63,48,0,96,111,42,103,101,56,5,66,0,0,0,93,57,102,66};
		int [] load4_3 ={105,70,14,35,111,104,103,14,53,103,48,66,84,31,77,48,89,7,7,36,66,21,46,0,44,50,14,34,0,72,0,70,98,107,54,50,105,111,74,35,52,69,56,57,80,52,5,50,0,74,42,58,43,5,83,47,49,53};
		int [] load4_4 ={50,88,0,75,50,30,84,0,7,34,34,0,42,98,36,75,84,68,77,71,73,7,95,64,81,102,73,101,87,36,54,52,0,101,24,5,0,81,63,7,88,74,111,45,14,0,14,41,88,103,81,28,0,106,96,100,35,102,28,7,7,5,36,36,72,50,111,103,111,7,7,25,59,107,14,98,21,53};
		
		int [] load6_0 ={5,72,0,61,117,103,68,28,115,96,36,64,0,48,36,86,0,99,70,51,43,99,70,80,70,80,21,42,0,7,107,40,80,52,0,111,44,108,0,42,74,14,42,72,77,40,97,69,7,52,85,56,0,108,98,0,40,7,58,78,0,108,100,0,87,28,80,87,35,0};
		int [] load6_1 ={48,36,92,101,108,74,72,21,14,75,14,47,97,79,41,105,62,52,50,0,42,93,56,76,42,63,28,60,74,77,77,5,72,7,78,14,105,70,60,66,73,117,0,78,104,72,73,7,42,70,14,41,54,83,39,0,36,106,42,0,70,45,104,91,69,95,0,0};
		int [] load6_2 ={10,28,21,10,64,70,20,0,5,36,60,74,75,14,70,34,77,48,84,36,7,79,0,78,39,48,67,54,57,78,21,41,0,57,88,51,40,80,99,0,77,0,98,14,0,50,0,0,73,7,40,56,48,90,0,80,7,0,57,7,92,42,0,61,79,7};
		int [] load6_3 ={61,42,39,40,7,111,74,75,68,107,102,50,30,14,81,82,84,61,44,27,113,72,0,82,82,111,28,82,0,72,44,115,57,0,50,7,93,114,0,73,0,80,48,68,0,77,37,36,96,109,90,58,36,105,14,39,81,37,84,95,117,106,43,75,113,81,98,42,105};
		int [] load6_4 ={10,56,108,81,0,36,90,64,36,105,64,108,32,84,111,107,85,97,86,52,74,0,46,70,48,36,84,111,60,75,93,41,5,84,84,81,7,89,28,104,28,52,83,54,85,35,84,99,111,64,111,7,14,14,21,48,36,14,101};
		
		int [] load8_0 ={48,90,105,56,82,116,78,58,111,111,111,100,7,36,70,35,69,0,36,57,105,42,14,60,7,49,84,84,78,54,42,40,73,104,21,107,67,10,35,105,42,108,77,14,14,77,28,68,78,50,83,39,95,35,98,111,48,38,88,85,0,76,76,104};
		int [] load8_1 ={54,78,68,50,50,54,48,81,95,50,99,14,99,85,93,39,50,107,81,98,81,53,73,34,58,35,53,0,0,61,95,78,0,7,58,71,44,53,91,80,59,90,69,39,20,5,84,80,46,7,80,42,7,108,0,37};
		int [] load8_2 ={85,88,50,74,0,44,42,84,87,53,14,53,68,51,87,101,63,80,77,54,0,70,57,91,72,108,30,101,105,10,28,0,61,80,77,96,50,7,21,50,36,73,78,72,0,113,14,0,66,101,7,7,90,7,28,104,108,46};
		int [] load8_3 ={0,0,0,77,100,28,72,63,50,10,35,93,61,10,96,115,15,0,105,101,78,33,74,111,101,21,101,67,0,50,46,72,7,86,7,41,97,35,48,114,93,77,58};
		int [] load8_4 ={67,84,80,95,90,36,84,108,72,108,81,53,107,107,7,36,84,80,79,90,7,70,62,88,46,85,73,0,43,89,0,56,110,88,48,80,111,93,74,115,42,14,42,78,54,46,0,93,87,47,105,46,81,53,7,107,48,72,66,87,50,53,74};
		
		int [] load10_0 ={65,0,60,87,99,64,35,98,0,47,14,50,77,81,58,21,89,0,83,46,109,14,48,21,48,60,80,66,39,61,50,0,7,7,46,67,88,89,64,7,50,0,64,5,94,5};
		int [] load10_1 ={33,92,101,36,0,28,91,88,7,84,95,0,98,50,14,40,58,97,46,50,95,67,46,14,64,90,51,84,96,68,50,34,36,84,94,28,14,67,101,5,54,57,113,21};
		int [] load10_2 ={91,83,54,53,7,84,46,87,50,49,71,21,66,21,48,14,92,28,50,36,49,7,69,54,66,73,95,64,75,0,115,0,54,7,60,39,35,44,93,87,60};
		int [] load10_3 ={33,80,7,97,84,7,74,50,103,60,47,95,0,42,7,38,0,21,84,81,5,53,83,99,66,75,48,107,0,47,79,7,75,101,50,101,39,51,76,0,106,66,56,39,107,72,86};
		int [] load10_4 ={46,80,121,107,77,0,44,105,111,114,35,97,48,21,7,21,62,7,45,92,55,56,5,0,46,81,56,76,14,7,78,59,28,14,108};
		
		backupVMbyNaive.add(load2_0);
		backupVMbyNaive.add(load2_1);
		backupVMbyNaive.add(load2_2);
		backupVMbyNaive.add(load2_3);
		backupVMbyNaive.add(load2_4);
		
		backupVMbyNaive.add(load4_0);
		backupVMbyNaive.add(load4_1);
		backupVMbyNaive.add(load4_2);
		backupVMbyNaive.add(load4_3);
		backupVMbyNaive.add(load4_4);
		
		backupVMbyNaive.add(load6_0);
		backupVMbyNaive.add(load6_1);
		backupVMbyNaive.add(load6_2);
		backupVMbyNaive.add(load6_3);
		backupVMbyNaive.add(load6_4);
		
		backupVMbyNaive.add(load8_0);
		backupVMbyNaive.add(load8_1);
		backupVMbyNaive.add(load8_2);
		backupVMbyNaive.add(load8_3);
		backupVMbyNaive.add(load8_4);
		
		backupVMbyNaive.add(load10_0);
		backupVMbyNaive.add(load10_1);
		backupVMbyNaive.add(load10_2);
		backupVMbyNaive.add(load10_3);
		backupVMbyNaive.add(load10_4);
		
		return backupVMbyNaive;
	}
	
	
	public ArrayList<int[]> getbackupBwBySVMPBG()
	{
		ArrayList<int[]> backupVMbySVMPBG = new ArrayList<int[]>();
		
		int [] load2_0 ={36,5,72,52,34,14,0,30,84,5,28,30,5,48,0,54,60,75,5,66,69,56,85,40,32,72,10,0,10,75,48,46,40,72,60,48,30,20,63,36,15,76,0,83,77,46,0,61,56,14,20,0,38,5,20,90,69,42,81,10,80,54,42,15,60,28,40,81,72,20,32,72,0,7,76,31,69,75,81};
		int [] load2_1 ={72,72,56,36,40,69,36,24,32,87,66,10,0,0,36,49,10,10,30,54,66,63,72,33,66,60,30,52,15,0,32,0,81,48,0,24,54,25,0,0,33,21,0,0,60,10,72,84,32,23,30,36,78,32,40,50,72,15,0,43,48,48,30,48,0,54,0,10,81,28,20,42,46,49,81,57,0,36,0,56,60};
		int [] load2_2 ={78,25,42,34,32,60,80,5,10,36,10,15,54,72,73,75,5,10,52,72,66,78,76,81,50,60,20,27,63,69,66,48,54,76,81,28,10,7,69,7,5,31,63,81,60,69,84,63,15,0,36,36,69,0,35,30,84,73,60,43,32,30,0,68,47,47,36,63,84,10,39,75,10,81,66,72,15,69,43,76,30,60};
		int [] load2_3 ={72,15,25,30,60,54,48,49,0,75,43,0,48,69,0,0,69,0,10,73,10,72,48,75,31,58,5,69,66,72,0,57,15,63,54,19,54,40,54,0,46,52,46,5,36,72,36,5,60,56,10,72,5,55,43,63,59,64,75,49,72,10,7,50,0,42,45,80,5,54,0,77,33,69,78,40,25,10,48,63,54,56,62};
		int [] load2_4 ={49,60,60,60,20,5,46,80,32,30,56,75,48,43,69,0,46,75,7,38,10,60,48,10,28,47,31,15,66,20,66,5,40,5,5,75,44,60,30,0,76,72,5,21,65,76,66,0,54,54,33,32,54,83,81,36,43,51,5,5,78,0,5,76,50,0,48,40,57,60,72,75,40,71,24,72,41,36,60,56};
		
		int [] load4_0 ={63,72,20,28,69,5,66,5,59,69,31,36,36,76,25,7,50,25,45,60,60,0,69,57,87,71,43,72,42,50,7,32,60,54,63,24,69,25,57,53,78,40,5,42,46,35,69};
		int [] load4_1 ={52,45,84,75,31,25,66,81,75,75,10,25,30,0,25,0,72,84,0,7,30,54,20,25,50,34,52,52,32,60,81,49,5,84,48,36,66,5,0,73,15,5,5,21,69,62,48,61,59};
		int [] load4_2 ={0,46,47,72,45,60,58,54,48,15,81,81,63,25,35,43,7,20,15,38,48,40,0,64,63,84,57,66,7,10,84,42,12,68,81,30,71,76,46,5,50,0,10,14,66,45,72,51,7};
		int [] load4_3 ={75,54,20,81,66,78,73,10,42,36,50,31,57,53,42,5,41,34,31,15,36,0,31,34,5,33,63,84,0,5,60,90,42,75,25,55,58,53,40,60,50,5,46,0,36,34,9,36,43,42,25};
		int [] load4_4 ={36,66,54,0,59,36,41,45,72,10,7,0,30,42,72,24,63,57,66,54,66,56,40,0,75,36,5,0,66,50,5,34,20,31,35,78,28,5,7,36,32,63,46,81,73,81,9,25,50,69,88,72,15,72,42,28};
		
		int [] load6_0 ={5,54,0,42,91,32,50,20,54,36,76,60,54,60,30,0,66,25,77,32,10,68,50,81,48,78,73,57,0,50,46,0,72,5,46,4,66,0,66,28,60,82,63,25,0};
		int [] load6_1 ={43,40,76,75,15,54,10,30,46,0,20,48,36,42,64,5,57,21,57,5,48,5,59,10,81,48,0,10,4,78,70,59};
		int [] load6_2 ={10,20,15,10,46,60,36,20,63,0,9,30,54,10,66,5,0,57,30,33,84,54,72,78,57,0,93,14,36,0,57,66,5,0,5,36,50,66,60};
		int [] load6_3 ={52,36,54,30,32,53,42,72,84,60,0,5,69,72,84,0,60,50,30,56,24,46,34,76,78};
		int [] load6_4 ={10,46,42,78,60,46,32,75,77,63,76,20,50,54,0,32,37,69,60,60,42,72,5,72,20,20,78,46,54,63,25,78,56,81,9,14,21,42,62,36,28,75,66};
		
		int [] load8_0 ={43,66,75,60,5,10,45,24,54,25,57,5,46,10,81,5,34,69,69,72,60,44,36,10,50,15,66,28,42,21,66,60,44,63,69};
		int [] load8_1 ={48,66,56,24,69,42,85,10,71,30,35,66,60,0,63,10,14,66,28,28,72,10,72,45};
		int [] load8_2 ={63,66,46,49,28,34,36,72,63,43,30,78,81,10,20,0,55,61,57,72,68,10,5,0,66,53,69,20,10,77};
		int [] load8_3 ={0,0,0,52,73,52,52,31,10,25,73,42,10,76,56,77,65,32,75,54,64,84,66,83};
		int [] load8_4 ={54,72,60,69,72,48,76,0,36,72,60,59,7,46,0,48,57,84,5,60,72,50,30,40,66,42,43,48,50,63,42};
		
		int [] load10_0 ={56,5,59,69,20,0,39,31,57,15,0,21,42,46,30,40,66,51,0,87,46,72,87,10};
		int [] load10_1 ={33,76,81,69,32,85,0,20,28,72,69,75,48,57,24,53,78,28,10,5,44,15};
		int [] load10_2 ={69,63,48,40,36,43,46,0,0,0,64,0,65,52,40,51,60,25,21,25,50,27,48};
		int [] load10_3 ={33,60,15,0,5,73,71,56,60,73,30,35,7,42,0,81,0};
		int [] load10_4 ={40,60,93,81,0,73,48,21,8,38,19,12,30,8,14,15,54,36,40,68,25,14,66,5,20,0,84};
		
		backupVMbySVMPBG.add(load2_0);
		backupVMbySVMPBG.add(load2_1);
		backupVMbySVMPBG.add(load2_2);
		backupVMbySVMPBG.add(load2_3);
		backupVMbySVMPBG.add(load2_4);
		
		backupVMbySVMPBG.add(load4_0);
		backupVMbySVMPBG.add(load4_1);
		backupVMbySVMPBG.add(load4_2);
		backupVMbySVMPBG.add(load4_3);
		backupVMbySVMPBG.add(load4_4);
		
		backupVMbySVMPBG.add(load6_0);
		backupVMbySVMPBG.add(load6_1);
		backupVMbySVMPBG.add(load6_2);
		backupVMbySVMPBG.add(load6_3);
		backupVMbySVMPBG.add(load6_4);
		
		backupVMbySVMPBG.add(load8_0);
		backupVMbySVMPBG.add(load8_1);
		backupVMbySVMPBG.add(load8_2);
		backupVMbySVMPBG.add(load8_3);
		backupVMbySVMPBG.add(load8_4);
		
		backupVMbySVMPBG.add(load10_0);
		backupVMbySVMPBG.add(load10_1);
		backupVMbySVMPBG.add(load10_2);
		backupVMbySVMPBG.add(load10_3);
		backupVMbySVMPBG.add(load10_4);
		
		return backupVMbySVMPBG;
	}
	
	
	public ArrayList<int[]> getbackupBwByPPDR()
	{
		ArrayList<int[]> backupVMbyPPDR = new ArrayList<int[]>();
		
		int [] load2_0 ={48,7,72,52,47,21,0,33,84,7,28,30,7,48,0,54,60,75,0,69,69,56,89,40,32,72,14,0,14,75,48,46,44,72,60,54,30,28,63,36,21,77,0,86,77,46,0,58,59,14,28,0,45,7,28,82,69,51,81,14,80,57,45,21,60,28,40,81,72,28,34,72,0,7,81,48,69,75,81};
		int [] load2_1 ={72,72,56,48,40,69,37,30,32,87,66,14,0,0,42,50,7,14,39,54,66,63,72,48,66,60,33,54,21,0,46,0,81,48,0,30,63,35,0,0,53,21,0,0,60,14,72,84,46,34,45,36,78,46,40,50,72,21,0,44,48,48,42,51,0,57,0,7,81,34,28,51,46,50,81,57,0,36,0,54,66};
		int [] load2_2 ={78,35,57,45,32,65,80,0,14,54,14,21,63,72,75,75,0,7,57,74,66,78,76,81,50,66,28,42,63,69,69,48,54,76,81,28,14,0,69,7,7,32,63,81,66,69,84,63,21,0,36,36,69,0,35,39,84,73,62,43,34,39,0,68,57,57,38,63,84,14,52,75,14,81,69,72,21,66,43,76,33,60};
		int [] load2_3 ={72,21,35,45,60,63,48,50,0,75,43,0,48,69,0,0,71,0,14,73,14,72,54,75,44,63,14,69,66,69,0,57,21,63,54,28,54,40,63,0,46,58,46,7,48,72,36,7,60,56,14,72,7,54,43,63,58,64,75,50,72,14,0,50,0,57,45,80,0,54,0,77,33,69,78,40,35,14,60,63,54,56,60};
		int [] load2_4 ={50,60,60,60,28,7,46,82,32,42,57,75,48,44,69,0,46,75,7,40,14,66,48,14,28,47,44,21,66,28,66,7,41,5,7,75,44,60,30,0,76,72,0,21,69,77,66,0,54,54,48,34,52,83,83,36,43,51,7,7,78,0,7,76,46,0,51,40,57,60,72,75,40,73,30,72,43,36,60,56};
		
		int [] load4_0 ={63,76,28,28,69,7,56,7,58,69,44,32,36,77,35,14,52,35,45,60,61,0,69,57,87,73,43,72,57,43,20,34,60,56,63,30,69,35,57,53,78,40,14,45,46,35,69};
		int [] load4_1 ={52,42,84,75,44,35,66,76,75,75,7,35,42,0,35,0,72,84,0,7,33,54,28,35,52,49,52,52,32,60,81,50,7,84,48,36,66,7,0,73,21,0,5,31,69,60,54,59,57};
		int [] load4_2 ={0,46,48,72,45,63,54,54,54,21,81,81,63,35,34,41,0,28,21,39,48,42,0,64,63,84,57,65,0,14,84,42,0,68,81,42,73,77,46,7,50,0,0,0,66,45,72,51,7};
		int [] load4_3 ={75,54,28,81,69,78,73,14,45,36,50,49,57,48,40,13,43,32,44,21,37,0,49,52,7,31,63,83,0,0,60,86,42,75,35,53,59,52,40,60,53,7,46,0,36,43,7,39,43,45,35};
		int [] load4_4 ={42,66,63,0,63,42,43,47,72,0,7,0,42,51,72,30,63,57,64,54,69,56,40,0,75,36,7,0,69,48,7,47,28,44,38,75,28,13,7,36,32,63,46,81,73,81,14,35,53,69,93,72,14,72,45,32};
		
		int [] load6_0 ={7,54,0,51,86,34,50,28,54,38,77,60,54,60,42,0,69,35,77,32,14,68,52,81,48,78,73,57,0,52,46,0,72,5,52,14,66,0,63,43,60,82,63,35,0};
		int [] load6_1 ={43,36,82,75,20,63,14,39,46,0,34,60,36,42,64,7,57,21,57,7,64,7,58,14,81,60,0,14,0,78,69,57};
		int [] load6_2 ={14,28,21,14,48,60,36,28,66,0,7,30,63,14,66,7,7,57,33,53,84,57,72,74,57,6,91,14,42,0,57,66,7,6,0,36,51,66,66};
		int [] load6_3 ={52,38,54,33,32,52,51,72,84,60,0,0,69,72,84,0,60,50,39,56,30,42,32,90,78};
		int [] load6_4 ={14,46,61,78,60,46,32,75,77,63,76,28,52,54,7,32,50,71,66,60,40,72,7,72,28,28,78,48,54,63,35,68,56,81,7,0,21,51,60,36,14,75,69};
		
		int [] load8_0 ={43,66,75,66,7,21,45,30,54,35,57,0,50,7,81,7,49,69,69,72,60,47,38,14,55,21,66,28,42,14,64,66,44,63,69};
		int [] load8_1 ={48,67,56,36,69,42,83,14,72,33,35,66,66,0,66,7,14,66,28,21,72,14,81,45};
		int [] load8_2 ={63,66,50,50,28,44,36,72,63,43,42,78,81,14,28,0,55,63,57,64,66,14,7,0,66,62,78,28,14,78};
		int [] load8_3 ={0,0,0,61,75,60,56,44,14,35,73,51,14,81,54,78,66,32,75,57,60,84,67,79};
		int [] load8_4 ={57,71,60,69,69,60,77,0,36,72,60,59,7,46,0,48,66,81,0,66,72,53,41,40,69,45,43,60,50,63,45};
		
		int [] load10_0 ={56,0,62,68,20,7,39,49,57,21,0,21,48,52,33,46,66,51,0,91,48,72,87,14};
		int [] load10_1 ={48,76,70,69,34,85,0,28,28,72,69,75,46,57,30,53,79,28,14,7,49,21};
		int [] load10_2 ={69,63,48,45,42,43,50,0,0,6,60,0,66,57,41,50,60,38,30,35,48,42,48};
		int [] load10_3 ={48,60,14,0,7,73,72,56,62,73,42,34,7,45,0,81,0};
		int [] load10_4 ={40,60,93,81,0,73,50,21,7,45,21,0,42,6,7,27,54,36,40,68,28,14,66,7,28,0,83};
		
		backupVMbyPPDR.add(load2_0);
		backupVMbyPPDR.add(load2_1);
		backupVMbyPPDR.add(load2_2);
		backupVMbyPPDR.add(load2_3);
		backupVMbyPPDR.add(load2_4);
		
		backupVMbyPPDR.add(load4_0);
		backupVMbyPPDR.add(load4_1);
		backupVMbyPPDR.add(load4_2);
		backupVMbyPPDR.add(load4_3);
		backupVMbyPPDR.add(load4_4);
		
		backupVMbyPPDR.add(load6_0);
		backupVMbyPPDR.add(load6_1);
		backupVMbyPPDR.add(load6_2);
		backupVMbyPPDR.add(load6_3);
		backupVMbyPPDR.add(load6_4);
		
		backupVMbyPPDR.add(load8_0);
		backupVMbyPPDR.add(load8_1);
		backupVMbyPPDR.add(load8_2);
		backupVMbyPPDR.add(load8_3);
		backupVMbyPPDR.add(load8_4);
		
		backupVMbyPPDR.add(load10_0);
		backupVMbyPPDR.add(load10_1);
		backupVMbyPPDR.add(load10_2);
		backupVMbyPPDR.add(load10_3);
		backupVMbyPPDR.add(load10_4);
		
		return backupVMbyPPDR;
	}
	
	public ArrayList<int[]> getbackupBwByWCS()
	{
		ArrayList<int[]> getbackupBwByWCS = new ArrayList<int[]>();
		
		int [] load2_0 ={48,21,66,51,39,24,15,33,75,21,27,30,21,48,18,48,54,69,18,69,63,51,75,36,30,66,24,18,24,69,42,42,39,72,54,54,30,30,57,30,27,69,18,75,69,42,15,51,51,24,30,18,45,21,30,75,63,51,75,24,75,57,45,27,54,27,36,75,72,30,30,66,18,21,66,39,63,69,75};
		int [] load2_1 ={72,66,51,48,36,63,33,30,30,75,60,24,15,18,42,45,21,24,39,48,60,57,66,45,60,54,33,48,27,18,42,15,72,48,18,30,63,33,18,15,45,27,18,18,54,24,66,75,42,33,45,33,72,42,39,45,66,27,15,39,45,45,36,45,15,57,15,21,72,33,30,51,42,45,75,51,15,36,15,54,66};
		int [] load2_2 ={72,33,57,45,30,57,75,15,24,54,24,27,63,66,66,69,18,21,48,69,60,72,69,75,45,66,30,36,57,63,69,48,48,72,75,27,24,15,63,21,21,27,57,75,66,63,75,57,27,18,36,36,63,15,33,39,75,66,54,39,30,39,18,63,57,57,33,57,75,24,51,69,24,75,69,69,27,60,39,69,33,54};
		int [] load2_3 ={72,27,33,45,60,63,45,45,15,69,39,18,45,63,15,15,63,18,24,66,24,66,54,69,39,54,21,63,60,63,18,51,27,57,48,27,48,39,63,18,42,51,42,21,48,66,33,21,54,48,24,66,15,48,39,57,51,60,69,45,66,24,15,45,18,57,45,72,18,48,18,69,33,63,72,36,33,24,60,57,54,51,60,};
		int [] load2_4 ={45,54,57,54,30,21,42,72,30,36,51,69,45,39,63,18,42,69,21,42,24,66,45,24,30,39,39,27,60,30,60,21,36,21,21,69,42,54,30,18,66,60,15,27,57,69,60,15,48,48,45,30,48,75,72,33,42,51,18,21,72,18,21,72,42,18,45,36,51,54,66,69,36,66,30,66,42,36,57,54};
		
		int [] load4_0 ={57,66,30,27,63,21,54,15,51,63,39,30,36,69,33,21,51,33,45,54,54,15,63,51,75,66,42,72,57,42,21,33,54,54,57,30,69,33,51,51,72,39,21,45,42,33,63,};
		int [] load4_1 ={51,39,75,69,39,33,66,69,69,63,21,33,36,18,30,15,66,75,18,21,33,48,30,33,51,39,48,48,30,54,72,45,21,75,42,33,60,21,18,66,24,18,18,27,63,60,54,51,51};
		int [] load4_2 ={18,42,39,66,42,54,54,54,54,27,75,75,57,33,30,39,18,30,27,33,45,36,15,60,54,75,51,57,18,24,75,36,18,63,72,36,66,69,42,21,45,15,15,15,60,45,63,42,18};
		int [] load4_3 ={69,48,30,72,69,72,66,24,45,33,45,39,51,45,36,21,42,30,39,27,33,18,39,48,21,27,57,69,18,18,51,75,42,69,33,51,51,45,36,54,51,21,42,15,33,42,21,33,39,45,33};
		int [] load4_4 ={42,60,63,18,63,42,42,45,72,18,21,18,36,45,66,30,57,51,57,54,69,54,36,18,69,36,21,15,69,42,21,39,30,39,33,66,30,21,21,36,30,54,42,75,66,75,21,33,45,63,75,66,24,66,45,27};
		
		int [] load6_0 ={21,48,15,51,75,33,45,30,54,33,69,60,48,54,36,15,69,33,69,30,24,63,51,75,48,72,66,57,18,51,42,18,66,15,48,18,66,18,57,39,54,72,57,33,18};
		int [] load6_1 ={39,36,72,69,24,63,24,39,42,15,30,60,33,36,63,21,51,27,51,21,60,21,51,24,75,60,15,24,18,72,63,57};
		int [] load6_2 ={24,30,27,24,42,60,33,30,57,18,21,30,63,24,60,21,18,51,33,45,75,57,72,66,51,15,75,24,42,15,51,60,18,18,18,36,51,60,66};
		int [] load6_3 ={48,33,54,33,30,48,51,69,75,60,18,18,63,72,75,18,54,45,39,51,30,39,30,75,72};
		int [] load6_4 ={24,42,57,72,54,42,30,69,69,57,72,30,51,48,18,30,42,63,66,60,36,72,21,72,30,30,72,42,54,57,33,63,54,72,21,18,27,45,60,36,24,69,69,};
		
		int [] load8_0 ={39,60,69,66,21,24,45,30,48,33,57,15,48,21,72,21,39,69,63,72,54,39,33,24,51,27,66,27,36,24,57,66,42,57,63};
		int [] load8_1 ={45,60,51,36,63,42,75,24,63,33,33,60,66,15,57,21,24,60,30,27,72,24,66,45};
		int [] load8_2 ={57,60,48,45,27,39,36,72,57,39,36,69,72,24,30,15,51,54,51,60,66,18,21,15,60,60,66,30,24,69};
		int [] load8_3 ={18,15,15,51,66,60,51,39,24,33,66,51,24,69,54,69,66,27,69,57,60,75,60,69};
		int [] load8_4 ={57,72,54,63,63,60,69,18,36,72,54,51,21,42,15,48,54,72,18,66,63,45,39,39,69,45,39,60,45,57,45,};
		
		int [] load10_0 ={51,18,51,63,30,15,39,39,51,27,18,27,45,48,33,42,60,45,18,75,42,66,75,21};
		int [] load10_1 ={45,69,66,63,30,75,18,30,30,72,63,66,42,57,30,45,69,30,24,21,42,27};
		int [] load10_2 ={63,57,45,39,42,39,48,18,15,15,60,15,66,48,36,45,60,33,27,33,45,36,45};
		int [] load10_3 ={45,54,24,15,21,66,72,54,60,66,36,33,21,45,15,75,18};
		int [] load10_4 ={36,54,75,75,18,66,45,27,15,45,21,15,36,18,21,27,48,36,36,63,30,21,66,21,30,15,72};
		
		getbackupBwByWCS.add(load2_0);
		getbackupBwByWCS.add(load2_1);
		getbackupBwByWCS.add(load2_2);
		getbackupBwByWCS.add(load2_3);
		getbackupBwByWCS.add(load2_4);
		
		getbackupBwByWCS.add(load4_0);
		getbackupBwByWCS.add(load4_1);
		getbackupBwByWCS.add(load4_2);
		getbackupBwByWCS.add(load4_3);
		getbackupBwByWCS.add(load4_4);
		
		getbackupBwByWCS.add(load6_0);
		getbackupBwByWCS.add(load6_1);
		getbackupBwByWCS.add(load6_2);
		getbackupBwByWCS.add(load6_3);
		getbackupBwByWCS.add(load6_4);
		
		getbackupBwByWCS.add(load8_0);
		getbackupBwByWCS.add(load8_1);
		getbackupBwByWCS.add(load8_2);
		getbackupBwByWCS.add(load8_3);
		getbackupBwByWCS.add(load8_4);
		
		getbackupBwByWCS.add(load10_0);
		getbackupBwByWCS.add(load10_1);
		getbackupBwByWCS.add(load10_2);
		getbackupBwByWCS.add(load10_3);
		getbackupBwByWCS.add(load10_4);
		
		return getbackupBwByWCS;
	}
}
